{"id":"dd074cfc4bc1c1933af94d3d20e54879","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/refisell.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract REFFISELL is ReentrancyGuard, Ownable {\r\n    using SafeMath for uint256;\r\n    uint256 phase = 1;\r\n    uint nonce;\r\n    bool _lock;\r\n    address WalletDindon;\r\n    bool ActiveWhiteList;\r\n    uint256 public PhaseSelling;\r\n    uint256 public TotalSelling;\r\n    IERC20 Reffi;\r\n    IERC20 Vsion;\r\n    mapping(address => bool) private WhiteList;\r\n    mapping(address => bool) private TokensAccept;\r\n    mapping(address => bool) private referer;\r\n    mapping(uint256 => Phases) private PhasesList;\r\n    mapping(address => uint256) private s_security;\r\n    event ReffiBuyed(address buyer, uint256 _amount);\r\n    event AirdopReferal(address refer, uint256 _amount);\r\n\r\n    struct Phases {\r\n        uint256 price;\r\n        uint256 amount;\r\n    }\r\n\r\n    constructor(address _criptovision, address _refi, address _walletDindon) {\r\n        WalletDindon = _walletDindon;\r\n        Reffi = IERC20(_refi);\r\n        Vsion = IERC20(_criptovision);\r\n        addPhases();\r\n        TokensAccept[0x55d398326f99059fF775485246999027B3197955] = true;\r\n        TokensAccept[0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56] = true;\r\n    }\r\n\r\n    modifier ContractLock() {\r\n        require(!_lock, \"Venta Pausada\");\r\n        _;\r\n    }\r\n\r\n    //Locks the contract for owner for the amount of time provided\r\n    function lock() external onlyOwner {\r\n        _lock = true;\r\n    }\r\n\r\n    //Unlocks the contract for owner when _lockTime is exceeds\r\n    function unlock() external onlyOwner {\r\n        _lock = false;\r\n    }\r\n\r\n    function ChangeActivateWhiteList() public onlyOwner {\r\n        ActiveWhiteList = !ActiveWhiteList;\r\n    }\r\n\r\n    function AddPhase(\r\n        uint256 _phase,\r\n        uint256 _price,\r\n        uint256 _amount\r\n    ) public onlyOwner {\r\n        PhasesList[_phase] = Phases(_price, _amount);\r\n    }\r\n\r\n    function ChangePhase(uint256 _number) public onlyOwner {\r\n        phase = _number;\r\n        PhaseSelling = 0;\r\n    }\r\n\r\n    function AddWhiteList(address _address) public onlyOwner {\r\n        WhiteList[_address] = true;\r\n    }\r\n\r\n    function AddTokenAccept(address _address) public onlyOwner {\r\n        TokensAccept[_address] = true;\r\n    }\r\n\r\n    function getPhase() public view returns (uint256) {\r\n        return phase;\r\n    }\r\n\r\n    function getPhasePrice() public view returns (uint256) {\r\n        return PhasesList[phase].price;\r\n    }\r\n\r\n    function getPhaseCost() public view returns (uint256) {\r\n        return PhasesList[phase].amount;\r\n    }\r\n\r\n    function ChangeWalletLiquidity(address _address) public onlyOwner {\r\n        WalletDindon = _address;\r\n    }\r\n\r\n    function BuyReffi(\r\n        address _token,\r\n        uint256 _amount\r\n    ) public nonReentrant ContractLock {\r\n        require(TokensAccept[_token], \"Invalid Token\");\r\n\r\n        Phases memory phaseInfo = PhasesList[phase];\r\n\r\n        uint256 _percent = GetPercent(_amount);\r\n        uint256 _price = GetPriceVsionHolder(msg.sender, phaseInfo.price);\r\n\r\n        if (ActiveWhiteList)\r\n            require(WhiteList[msg.sender], \"You are not in WhiteList\");\r\n\r\n        require(\r\n            IERC20(_token).balanceOf(msg.sender) >= _amount,\r\n            \"Balance To Low\"\r\n        );\r\n\r\n        uint256 ReffiAmount = _amount / _price;\r\n        uint256 totalReffiBuy = (((ReffiAmount * _percent) / 100) + ReffiAmount) * 10 ** 18;\r\n       \r\n        PhaseSelling += totalReffiBuy;\r\n\r\n        TotalSelling += _amount;\r\n\r\n        if (phaseInfo.amount == PhaseSelling) {\r\n            phase += 1;\r\n            PhaseSelling += 0;\r\n        }\r\n\r\n        require(\r\n            IERC20(_token).transferFrom(msg.sender, WalletDindon, _amount),\r\n            \"Error in Transfer\"\r\n        );\r\n        require(Reffi.transfer(msg.sender, totalReffiBuy), \"Error in Transfer\");\r\n\r\n        emit ReffiBuyed(msg.sender, ReffiAmount);\r\n    }\r\n\r\n    function addPhases() public {\r\n        PhasesList[1] = Phases(100000000000000000, 6006000 ether);\r\n        PhasesList[2] = Phases(150000000000000000, 2625000 ether);\r\n        PhasesList[3] = Phases(200000000000000000, 2625000 ether);\r\n        PhasesList[4] = Phases(250000000000000000, 2625000 ether);\r\n    }\r\n\r\n    function GetPercent(\r\n        uint256 _amount\r\n    ) internal pure returns (uint256 percent) {\r\n        _amount = _amount / 10 ** 18;\r\n        uint256 _percent = 0;\r\n        // 10 a 50 usdt un 25 % adiciinal.\r\n        // 51 a 100 usdt un 50% adicional.\r\n        // 101 a 1000 USDT 100 %\r\n        // 1001 a 10000 USDT  200 %\r\n        if (_amount >= 50 && _amount <100) {\r\n            _percent = 25;\r\n        }\r\n\r\n        if (_amount >= 100 && _amount <500) {\r\n            _percent = 50;\r\n        }\r\n\r\n        if (_amount >= 500 && _amount <1000) {\r\n            _percent = 100;\r\n        }\r\n\r\n        if (_amount >= 1000 && _amount < 5000) {\r\n            _percent = 150;\r\n        }\r\n        if (_amount >= 5000) {\r\n            _percent = 200;\r\n        }\r\n        \r\n        return _percent;\r\n    }\r\n\r\n    function GetPriceVsionHolder(\r\n        address _user,\r\n        uint256 _price\r\n    ) internal view returns (uint256) {\r\n        uint256 balanceVsion = Vsion.balanceOf(_user);\r\n        uint256 NewPrice = _price;\r\n        if (balanceVsion > 1 * 10 ** 8) {\r\n            NewPrice = _price.sub(0.05 ether);\r\n        }\r\n        return NewPrice;\r\n    }\r\n\r\n    function RecoverTokens(address _token) public onlyOwner {\r\n        IERC20(_token).transfer(\r\n            owner(),\r\n            IERC20(_token).balanceOf(address(this))\r\n        );\r\n    }\r\n\r\n    function TokensSellAdd(uint256 _amount) public onlyOwner {\r\n       TotalSelling=_amount;\r\n    }\r\n\r\n    function PhaseSellingAdd(uint256 _amount) public onlyOwner {\r\n        PhaseSelling=_amount;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[374],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":375,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":374,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,374],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[374],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":375,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":374,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,374],"name":"Pausable","nameLocation":"620:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"id":123,"name":"Paused","nameLocation":"730:6:1","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:1","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"id":128,"name":"Unpaused","nameLocation":"841:8:1","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:1","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nameLocation":"886:7:1","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nameLocation":"1213:13:1","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nameLocation":"1463:10:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nameLocation":"2195:6:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nameLocation":"2442:8:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1","usedErrors":[]}],"src":"105:2448:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[274]},"id":275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":274,"linearizedBaseContracts":[274],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":274,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":229,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":274,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":231,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":274,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":238,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":235,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":239,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":274,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":242,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":245,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":250,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":255,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":274,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":272,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":268,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":269,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":271,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":274,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":275,"src":"888:1952:2","usedErrors":[]}],"src":"112:2729:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[352]},"id":353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":276,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":352,"linearizedBaseContracts":[352],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":286,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":286,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":286,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":286,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":295,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":295,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":295,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":295,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":301,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":352,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":309,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":309,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":309,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":352,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":319,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":319,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":319,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":352,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":329,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":329,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":352,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":339,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":339,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":336,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":352,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":351,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":351,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":351,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":351,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":352,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":353,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[374]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":363,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":359,"id":362,"nodeType":"Return","src":"712:17:4"}]},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":364,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":374,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":372,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":368,"id":371,"nodeType":"Return","src":"819:15:4"}]},"id":373,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":366,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":374,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":375,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"285:196:5","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":686,"linearizedBaseContracts":[686],"name":"SafeMath","nameLocation":"490:8:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":408,"nodeType":"Block","src":"717:140:5","statements":[{"id":407,"nodeType":"UncheckedBlock","src":"727:124:5","statements":[{"assignments":[390],"declarations":[{"constant":false,"id":390,"mutability":"mutable","name":"c","nameLocation":"759:1:5","nodeType":"VariableDeclaration","scope":407,"src":"751:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":394,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"763:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"767:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":395,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"786:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"790:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":402,"nodeType":"IfStatement","src":"782:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":388,"id":401,"nodeType":"Return","src":"793:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":404,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"838:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":388,"id":406,"nodeType":"Return","src":"824:16:5"}]}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"505:131:5","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:5","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"a","nameLocation":"665:1:5","nodeType":"VariableDeclaration","scope":409,"src":"657:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"b","nameLocation":"676:1:5","nodeType":"VariableDeclaration","scope":409,"src":"668:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:5"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"702:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"708:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:5"},"scope":686,"src":"641:216:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1078:113:5","statements":[{"id":435,"nodeType":"UncheckedBlock","src":"1088:97:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1116:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1120:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":428,"nodeType":"IfStatement","src":"1112:28:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":420,"id":427,"nodeType":"Return","src":"1123:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1168:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1172:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":420,"id":434,"nodeType":"Return","src":"1154:20:5"}]}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"863:134:5","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":437,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:5","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"a","nameLocation":"1026:1:5","nodeType":"VariableDeclaration","scope":437,"src":"1018:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"b","nameLocation":"1037:1:5","nodeType":"VariableDeclaration","scope":437,"src":"1029:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:5"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"1063:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":416,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"1069:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:5"},"scope":686,"src":"1002:189:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":478,"nodeType":"Block","src":"1415:417:5","statements":[{"id":477,"nodeType":"UncheckedBlock","src":"1425:401:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1683:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"IfStatement","src":"1679:28:5","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":448,"id":455,"nodeType":"Return","src":"1691:16:5"}},{"assignments":[458],"declarations":[{"constant":false,"id":458,"mutability":"mutable","name":"c","nameLocation":"1729:1:5","nodeType":"VariableDeclaration","scope":477,"src":"1721:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1733:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1737:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":463,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"1756:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1760:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"1765:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"1752:33:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":448,"id":471,"nodeType":"Return","src":"1768:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":474,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"1813:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":448,"id":476,"nodeType":"Return","src":"1799:16:5"}]}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1197:137:5","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":479,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:5","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"a","nameLocation":"1363:1:5","nodeType":"VariableDeclaration","scope":479,"src":"1355:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"b","nameLocation":"1374:1:5","nodeType":"VariableDeclaration","scope":479,"src":"1366:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:5"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"1400:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"1406:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:5"},"scope":686,"src":"1339:493:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"2057:114:5","statements":[{"id":505,"nodeType":"UncheckedBlock","src":"2067:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"2095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":498,"nodeType":"IfStatement","src":"2091:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":490,"id":497,"nodeType":"Return","src":"2103:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2148:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"2152:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":490,"id":504,"nodeType":"Return","src":"2134:20:5"}]}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"1838:138:5","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:5","nodeType":"FunctionDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"a","nameLocation":"2005:1:5","nodeType":"VariableDeclaration","scope":507,"src":"1997:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"b","nameLocation":"2016:1:5","nodeType":"VariableDeclaration","scope":507,"src":"2008:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:5"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"2042:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":486,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"2048:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:5"},"scope":686,"src":"1981:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":534,"nodeType":"Block","src":"2406:114:5","statements":[{"id":533,"nodeType":"UncheckedBlock","src":"2416:98:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2444:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"2440:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":518,"id":525,"nodeType":"Return","src":"2452:17:5"}},{"expression":{"components":[{"hexValue":"74727565","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"2497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":518,"id":532,"nodeType":"Return","src":"2483:20:5"}]}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"2177:148:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:5","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"a","nameLocation":"2354:1:5","nodeType":"VariableDeclaration","scope":535,"src":"2346:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"b","nameLocation":"2365:1:5","nodeType":"VariableDeclaration","scope":535,"src":"2357:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:5"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"2391:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"2397:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:5"},"scope":686,"src":"2330:190:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"2822:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"2839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"2843:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":544,"id":548,"nodeType":"Return","src":"2832:12:5"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"2526:224:5","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":550,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:5","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"a","nameLocation":"2776:1:5","nodeType":"VariableDeclaration","scope":550,"src":"2768:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"b","nameLocation":"2787:1:5","nodeType":"VariableDeclaration","scope":550,"src":"2779:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:5"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"2813:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:5"},"scope":686,"src":"2755:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":564,"nodeType":"Block","src":"3189:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3206:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"3210:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":559,"id":563,"nodeType":"Return","src":"3199:12:5"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"2857:260:5","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":565,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:5","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"a","nameLocation":"3143:1:5","nodeType":"VariableDeclaration","scope":565,"src":"3135:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"b","nameLocation":"3154:1:5","nodeType":"VariableDeclaration","scope":565,"src":"3146:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:5"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3180:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:5"},"scope":686,"src":"3122:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":579,"nodeType":"Block","src":"3532:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3549:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3553:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":574,"id":578,"nodeType":"Return","src":"3542:12:5"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"3224:236:5","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":580,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:5","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"a","nameLocation":"3486:1:5","nodeType":"VariableDeclaration","scope":580,"src":"3478:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"b","nameLocation":"3497:1:5","nodeType":"VariableDeclaration","scope":580,"src":"3489:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:5"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"3523:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:5"},"scope":686,"src":"3465:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"3917:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"3934:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3938:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":589,"id":593,"nodeType":"Return","src":"3927:12:5"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"3567:278:5","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:5","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"a","nameLocation":"3871:1:5","nodeType":"VariableDeclaration","scope":595,"src":"3863:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"b","nameLocation":"3882:1:5","nodeType":"VariableDeclaration","scope":595,"src":"3874:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:5"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"3908:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:5"},"scope":686,"src":"3850:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"4466:29:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4483:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4487:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":608,"nodeType":"Return","src":"4476:12:5"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"3952:442:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":610,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:5","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"a","nameLocation":"4420:1:5","nodeType":"VariableDeclaration","scope":610,"src":"4412:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"b","nameLocation":"4431:1:5","nodeType":"VariableDeclaration","scope":610,"src":"4423:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:5"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"4457:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:5"},"scope":686,"src":"4399:96:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":634,"nodeType":"Block","src":"5084:106:5","statements":[{"id":633,"nodeType":"UncheckedBlock","src":"5094:90:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5126:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5131:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":626,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5134:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"5118:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"5168:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5172:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":621,"id":632,"nodeType":"Return","src":"5161:12:5"}]}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"4501:453:5","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":635,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:5","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"a","nameLocation":"4989:1:5","nodeType":"VariableDeclaration","scope":635,"src":"4981:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"b","nameLocation":"5008:1:5","nodeType":"VariableDeclaration","scope":635,"src":"5000:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:5","nodeType":"VariableDeclaration","scope":635,"src":"5019:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":616,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":635,"src":"5075:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:5"},"scope":686,"src":"4959:231:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"5799:105:5","statements":[{"id":658,"nodeType":"UncheckedBlock","src":"5809:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5841:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":651,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5848:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"5833:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5882:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"5886:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":646,"id":657,"nodeType":"Return","src":"5875:12:5"}]}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"5196:473:5","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:5","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"a","nameLocation":"5704:1:5","nodeType":"VariableDeclaration","scope":660,"src":"5696:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"b","nameLocation":"5723:1:5","nodeType":"VariableDeclaration","scope":660,"src":"5715:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:5","nodeType":"VariableDeclaration","scope":660,"src":"5734:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":641,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:5"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"5790:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:5"},"scope":686,"src":"5674:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"6675:105:5","statements":[{"id":683,"nodeType":"UncheckedBlock","src":"6685:89:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6717:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":676,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"6724:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"6709:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6758:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":671,"id":682,"nodeType":"Return","src":"6751:12:5"}]}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"5910:635:5","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:5","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"a","nameLocation":"6580:1:5","nodeType":"VariableDeclaration","scope":685,"src":"6572:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"b","nameLocation":"6599:1:5","nodeType":"VariableDeclaration","scope":685,"src":"6591:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:5","nodeType":"VariableDeclaration","scope":685,"src":"6610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":666,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:5"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6666:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:5"},"scope":686,"src":"6550:230:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":687,"src":"482:6300:5","usedErrors":[]}],"src":"107:6676:5"},"id":5},"contracts/refisell.sol":{"ast":{"absolutePath":"contracts/refisell.sol","exportedSymbols":{"Context":[374],"IERC20":[352],"Ownable":[112],"Pausable":[220],"REFFISELL":[1298],"ReentrancyGuard":[274],"SafeMath":[686]},"id":1299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":275,"src":"60:62:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":353,"src":"124:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":113,"src":"182:52:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":221,"src":"236:55:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":687,"src":"293:57:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":694,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":274,"src":"376:15:6"},"id":695,"nodeType":"InheritanceSpecifier","src":"376:15:6"},{"baseName":{"id":696,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"393:7:6"},"id":697,"nodeType":"InheritanceSpecifier","src":"393:7:6"}],"canonicalName":"REFFISELL","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1298,"linearizedBaseContracts":[1298,112,374,274],"name":"REFFISELL","nameLocation":"363:9:6","nodeType":"ContractDefinition","nodes":[{"id":700,"libraryName":{"id":698,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":686,"src":"414:8:6"},"nodeType":"UsingForDirective","src":"408:27:6","typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":703,"mutability":"mutable","name":"phase","nameLocation":"449:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"441:17:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"457:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"nonce","nameLocation":"470:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"465:10:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint","nodeType":"ElementaryTypeName","src":"465:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"_lock","nameLocation":"487:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"482:10:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"482:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"WalletDindon","nameLocation":"507:12:6","nodeType":"VariableDeclaration","scope":1298,"src":"499:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"ActiveWhiteList","nameLocation":"531:15:6","nodeType":"VariableDeclaration","scope":1298,"src":"526:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":710,"name":"bool","nodeType":"ElementaryTypeName","src":"526:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"functionSelector":"c362d20c","id":713,"mutability":"mutable","name":"PhaseSelling","nameLocation":"568:12:6","nodeType":"VariableDeclaration","scope":1298,"src":"553:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f9b49640","id":715,"mutability":"mutable","name":"TotalSelling","nameLocation":"602:12:6","nodeType":"VariableDeclaration","scope":1298,"src":"587:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":718,"mutability":"mutable","name":"Reffi","nameLocation":"628:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"621:12:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":717,"nodeType":"UserDefinedTypeName","pathNode":{"id":716,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":352,"src":"621:6:6"},"referencedDeclaration":352,"src":"621:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"Vsion","nameLocation":"647:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"640:12:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":720,"nodeType":"UserDefinedTypeName","pathNode":{"id":719,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":352,"src":"640:6:6"},"referencedDeclaration":352,"src":"640:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"WhiteList","nameLocation":"692:9:6","nodeType":"VariableDeclaration","scope":1298,"src":"659:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":724,"keyType":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"659:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"678:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":729,"mutability":"mutable","name":"TokensAccept","nameLocation":"741:12:6","nodeType":"VariableDeclaration","scope":1298,"src":"708:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":728,"keyType":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"708:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":727,"name":"bool","nodeType":"ElementaryTypeName","src":"727:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":733,"mutability":"mutable","name":"referer","nameLocation":"793:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"760:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":732,"keyType":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"768:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"760:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":731,"name":"bool","nodeType":"ElementaryTypeName","src":"779:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":738,"mutability":"mutable","name":"PhasesList","nameLocation":"842:10:6","nodeType":"VariableDeclaration","scope":1298,"src":"807:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases)"},"typeName":{"id":737,"keyType":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"807:26:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases)"},"valueType":{"id":736,"nodeType":"UserDefinedTypeName","pathNode":{"id":735,"name":"Phases","nodeType":"IdentifierPath","referencedDeclaration":759,"src":"826:6:6"},"referencedDeclaration":759,"src":"826:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage_ptr","typeString":"struct REFFISELL.Phases"}}},"visibility":"private"},{"constant":false,"id":742,"mutability":"mutable","name":"s_security","nameLocation":"895:10:6","nodeType":"VariableDeclaration","scope":1298,"src":"859:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":741,"keyType":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"859:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"id":748,"name":"ReffiBuyed","nameLocation":"918:10:6","nodeType":"EventDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"indexed":false,"mutability":"mutable","name":"buyer","nameLocation":"937:5:6","nodeType":"VariableDeclaration","scope":748,"src":"929:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"929:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"952:7:6","nodeType":"VariableDeclaration","scope":748,"src":"944:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:32:6"},"src":"912:49:6"},{"anonymous":false,"id":754,"name":"AirdopReferal","nameLocation":"973:13:6","nodeType":"EventDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"indexed":false,"mutability":"mutable","name":"refer","nameLocation":"995:5:6","nodeType":"VariableDeclaration","scope":754,"src":"987:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"1010:7:6","nodeType":"VariableDeclaration","scope":754,"src":"1002:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"986:32:6"},"src":"967:52:6"},{"canonicalName":"REFFISELL.Phases","id":759,"members":[{"constant":false,"id":756,"mutability":"mutable","name":"price","nameLocation":"1060:5:6","nodeType":"VariableDeclaration","scope":759,"src":"1052:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"amount","nameLocation":"1084:6:6","nodeType":"VariableDeclaration","scope":759,"src":"1076:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Phases","nameLocation":"1034:6:6","nodeType":"StructDefinition","scope":1298,"src":"1027:71:6","visibility":"public"},{"body":{"id":799,"nodeType":"Block","src":"1179:289:6","statements":[{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":768,"name":"WalletDindon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"1190:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":769,"name":"_walletDindon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"1205:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1190:28:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":771,"nodeType":"ExpressionStatement","src":"1190:28:6"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":772,"name":"Reffi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"1229:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":774,"name":"_refi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"1244:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1237:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1237:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"src":"1229:21:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":777,"nodeType":"ExpressionStatement","src":"1229:21:6"},{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":778,"name":"Vsion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1261:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":780,"name":"_criptovision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1276:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":779,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1269:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1269:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"src":"1261:29:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":783,"nodeType":"ExpressionStatement","src":"1261:29:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":784,"name":"addPhases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"1301:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1301:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":786,"nodeType":"ExpressionStatement","src":"1301:11:6"},{"expression":{"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":787,"name":"TokensAccept","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1323:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":789,"indexExpression":{"hexValue":"307835356433393833323666393930353966463737353438353234363939393032374233313937393535","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x55d398326f99059fF775485246999027B3197955"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1323:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1382:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1323:63:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"ExpressionStatement","src":"1323:63:6"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":793,"name":"TokensAccept","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1397:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":795,"indexExpression":{"hexValue":"307865396537434541334465646341353938343738304261666335393962443639414464303837443536","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1410:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1397:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1456:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1397:63:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":798,"nodeType":"ExpressionStatement","src":"1397:63:6"}]},"id":800,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"_criptovision","nameLocation":"1126:13:6","nodeType":"VariableDeclaration","scope":800,"src":"1118:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"_refi","nameLocation":"1149:5:6","nodeType":"VariableDeclaration","scope":800,"src":"1141:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"1141:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"_walletDindon","nameLocation":"1164:13:6","nodeType":"VariableDeclaration","scope":800,"src":"1156:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1117:61:6"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"1179:0:6"},"scope":1298,"src":"1106:362:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":809,"nodeType":"Block","src":"1500:63:6","statements":[{"expression":{"arguments":[{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1519:6:6","subExpression":{"id":803,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"1520:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56656e74612050617573616461","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1527:15:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51e8ae25417ee5580fe3609896b805ca8d874424103baccea570cf7441e53704","typeString":"literal_string \"Venta Pausada\""},"value":"Venta Pausada"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51e8ae25417ee5580fe3609896b805ca8d874424103baccea570cf7441e53704","typeString":"literal_string \"Venta Pausada\""}],"id":802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1511:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1511:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"1511:32:6"},{"id":808,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"id":810,"name":"ContractLock","nameLocation":"1485:12:6","nodeType":"ModifierDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"1497:2:6"},"src":"1476:87:6","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"1674:31:6","statements":[{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"1685:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1693:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1685:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"ExpressionStatement","src":"1685:12:6"}]},"functionSelector":"f83d08ba","id":820,"implemented":true,"kind":"function","modifiers":[{"id":813,"kind":"modifierInvocation","modifierName":{"id":812,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1664:9:6"},"nodeType":"ModifierInvocation","src":"1664:9:6"}],"name":"lock","nameLocation":"1648:4:6","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"1674:0:6"},"scope":1298,"src":"1639:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":829,"nodeType":"Block","src":"1814:32:6","statements":[{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"_lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"1825:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1833:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1825:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"ExpressionStatement","src":"1825:13:6"}]},"functionSelector":"a69df4b5","id":830,"implemented":true,"kind":"function","modifiers":[{"id":823,"kind":"modifierInvocation","modifierName":{"id":822,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1804:9:6"},"nodeType":"ModifierInvocation","src":"1804:9:6"}],"name":"unlock","nameLocation":"1786:6:6","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"1792:2:6"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"1814:0:6"},"scope":1298,"src":"1777:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":840,"nodeType":"Block","src":"1906:53:6","statements":[{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":835,"name":"ActiveWhiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"1917:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1935:16:6","subExpression":{"id":836,"name":"ActiveWhiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"1936:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1917:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":839,"nodeType":"ExpressionStatement","src":"1917:34:6"}]},"functionSelector":"6f6a5d06","id":841,"implemented":true,"kind":"function","modifiers":[{"id":833,"kind":"modifierInvocation","modifierName":{"id":832,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1896:9:6"},"nodeType":"ModifierInvocation","src":"1896:9:6"}],"name":"ChangeActivateWhiteList","nameLocation":"1863:23:6","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"1886:2:6"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"1906:0:6"},"scope":1298,"src":"1854:105:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":861,"nodeType":"Block","src":"2085:63:6","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":852,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2096:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":854,"indexExpression":{"id":853,"name":"_phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2107:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2096:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":856,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2124:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":857,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2132:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"Phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"2117:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phases_$759_storage_ptr_$","typeString":"type(struct REFFISELL.Phases storage pointer)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2117:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"src":"2096:44:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":860,"nodeType":"ExpressionStatement","src":"2096:44:6"}]},"functionSelector":"1c5f8024","id":862,"implemented":true,"kind":"function","modifiers":[{"id":850,"kind":"modifierInvocation","modifierName":{"id":849,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2075:9:6"},"nodeType":"ModifierInvocation","src":"2075:9:6"}],"name":"AddPhase","nameLocation":"1976:8:6","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"_phase","nameLocation":"2003:6:6","nodeType":"VariableDeclaration","scope":862,"src":"1995:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"_price","nameLocation":"2028:6:6","nodeType":"VariableDeclaration","scope":862,"src":"2020:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"_amount","nameLocation":"2053:7:6","nodeType":"VariableDeclaration","scope":862,"src":"2045:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1984:83:6"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"2085:0:6"},"scope":1298,"src":"1967:181:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":877,"nodeType":"Block","src":"2211:61:6","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":869,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2222:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":870,"name":"_number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2222:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2222:15:6"},{"expression":{"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":873,"name":"PhaseSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2248:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2263:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2248:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":876,"nodeType":"ExpressionStatement","src":"2248:16:6"}]},"functionSelector":"cf922b1e","id":878,"implemented":true,"kind":"function","modifiers":[{"id":867,"kind":"modifierInvocation","modifierName":{"id":866,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2201:9:6"},"nodeType":"ModifierInvocation","src":"2201:9:6"}],"name":"ChangePhase","nameLocation":"2165:11:6","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"_number","nameLocation":"2185:7:6","nodeType":"VariableDeclaration","scope":878,"src":"2177:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:17:6"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"2211:0:6"},"scope":1298,"src":"2156:116:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":891,"nodeType":"Block","src":"2337:45:6","statements":[{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":885,"name":"WhiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2348:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":887,"indexExpression":{"id":886,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2358:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2348:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2370:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2348:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"nodeType":"ExpressionStatement","src":"2348:26:6"}]},"functionSelector":"f8d5f409","id":892,"implemented":true,"kind":"function","modifiers":[{"id":883,"kind":"modifierInvocation","modifierName":{"id":882,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2327:9:6"},"nodeType":"ModifierInvocation","src":"2327:9:6"}],"name":"AddWhiteList","nameLocation":"2289:12:6","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"_address","nameLocation":"2310:8:6","nodeType":"VariableDeclaration","scope":892,"src":"2302:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2301:18:6"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"2337:0:6"},"scope":1298,"src":"2280:102:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":905,"nodeType":"Block","src":"2449:48:6","statements":[{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":899,"name":"TokensAccept","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2460:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":901,"indexExpression":{"id":900,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2473:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2460:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2485:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2460:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":904,"nodeType":"ExpressionStatement","src":"2460:29:6"}]},"functionSelector":"2fea6ac4","id":906,"implemented":true,"kind":"function","modifiers":[{"id":897,"kind":"modifierInvocation","modifierName":{"id":896,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2439:9:6"},"nodeType":"ModifierInvocation","src":"2439:9:6"}],"name":"AddTokenAccept","nameLocation":"2399:14:6","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"_address","nameLocation":"2422:8:6","nodeType":"VariableDeclaration","scope":906,"src":"2414:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2413:18:6"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2449:0:6"},"scope":1298,"src":"2390:107:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":913,"nodeType":"Block","src":"2555:31:6","statements":[{"expression":{"id":911,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2573:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":910,"id":912,"nodeType":"Return","src":"2566:12:6"}]},"functionSelector":"eced0280","id":914,"implemented":true,"kind":"function","modifiers":[],"name":"getPhase","nameLocation":"2514:8:6","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"2522:2:6"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"2546:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2545:9:6"},"scope":1298,"src":"2505:81:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":924,"nodeType":"Block","src":"2649:49:6","statements":[{"expression":{"expression":{"baseExpression":{"id":919,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2667:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":921,"indexExpression":{"id":920,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2678:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2667:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":756,"src":"2667:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":918,"id":923,"nodeType":"Return","src":"2660:30:6"}]},"functionSelector":"120005ae","id":925,"implemented":true,"kind":"function","modifiers":[],"name":"getPhasePrice","nameLocation":"2603:13:6","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"2616:2:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"2640:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2640:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2639:9:6"},"scope":1298,"src":"2594:104:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":935,"nodeType":"Block","src":"2760:50:6","statements":[{"expression":{"expression":{"baseExpression":{"id":930,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2778:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":932,"indexExpression":{"id":931,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2789:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2778:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":758,"src":"2778:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":929,"id":934,"nodeType":"Return","src":"2771:31:6"}]},"functionSelector":"e7cc0f79","id":936,"implemented":true,"kind":"function","modifiers":[],"name":"getPhaseCost","nameLocation":"2715:12:6","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"2727:2:6"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"2751:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2751:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2750:9:6"},"scope":1298,"src":"2706:104:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":947,"nodeType":"Block","src":"2884:42:6","statements":[{"expression":{"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":943,"name":"WalletDindon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":944,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2910:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2895:23:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":946,"nodeType":"ExpressionStatement","src":"2895:23:6"}]},"functionSelector":"939edd0e","id":948,"implemented":true,"kind":"function","modifiers":[{"id":941,"kind":"modifierInvocation","modifierName":{"id":940,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2874:9:6"},"nodeType":"ModifierInvocation","src":"2874:9:6"}],"name":"ChangeWalletLiquidity","nameLocation":"2827:21:6","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"_address","nameLocation":"2857:8:6","nodeType":"VariableDeclaration","scope":948,"src":"2849:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2849:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2848:18:6"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"2884:0:6"},"scope":1298,"src":"2818:108:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1085,"nodeType":"Block","src":"3043:1103:6","statements":[{"expression":{"arguments":[{"baseExpression":{"id":960,"name":"TokensAccept","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"3062:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":962,"indexExpression":{"id":961,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3075:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3062:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420546f6b656e","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3084:15:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc50684a1b72a05b0312de1d8d3b6e2417754ef81ff87989e398a892013c10d4","typeString":"literal_string \"Invalid Token\""},"value":"Invalid Token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc50684a1b72a05b0312de1d8d3b6e2417754ef81ff87989e398a892013c10d4","typeString":"literal_string \"Invalid Token\""}],"id":959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3054:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3054:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"3054:46:6"},{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"phaseInfo","nameLocation":"3127:9:6","nodeType":"VariableDeclaration","scope":1085,"src":"3113:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases"},"typeName":{"id":967,"nodeType":"UserDefinedTypeName","pathNode":{"id":966,"name":"Phases","nodeType":"IdentifierPath","referencedDeclaration":759,"src":"3113:6:6"},"referencedDeclaration":759,"src":"3113:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage_ptr","typeString":"struct REFFISELL.Phases"}},"visibility":"internal"}],"id":972,"initialValue":{"baseExpression":{"id":969,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3139:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":971,"indexExpression":{"id":970,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3150:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3139:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3113:43:6"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"_percent","nameLocation":"3177:8:6","nodeType":"VariableDeclaration","scope":1085,"src":"3169:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"arguments":[{"id":976,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3199:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"GetPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3188:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3188:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3169:38:6"},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"_price","nameLocation":"3226:6:6","nodeType":"VariableDeclaration","scope":1085,"src":"3218:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3218:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":987,"initialValue":{"arguments":[{"expression":{"id":982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3255:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3255:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":984,"name":"phaseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3267:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":756,"src":"3267:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"GetPriceVsionHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3235:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3235:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3218:65:6"},{"condition":{"id":988,"name":"ActiveWhiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3300:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"nodeType":"IfStatement","src":"3296:92:6","trueBody":{"expression":{"arguments":[{"baseExpression":{"id":990,"name":"WhiteList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"3338:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":993,"indexExpression":{"expression":{"id":991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3348:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3348:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3338:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420696e2057686974654c697374","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3361:26:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_69684167b8989c9b554e4e0e783342da6887d9eec48ee81663338eb681a6b347","typeString":"literal_string \"You are not in WhiteList\""},"value":"You are not in WhiteList"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69684167b8989c9b554e4e0e783342da6887d9eec48ee81663338eb681a6b347","typeString":"literal_string \"You are not in WhiteList\""}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3330:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3330:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"3330:58:6"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3448:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3448:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1000,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3430:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3423:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3423:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":309,"src":"3423:24:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3423:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1006,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3463:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3423:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520546f204c6f77","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3485:16:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_af0aebe545e05f4b7a9b9563ad119f952a8cd9512d87c4be9576331d81c696e4","typeString":"literal_string \"Balance To Low\""},"value":"Balance To Low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af0aebe545e05f4b7a9b9563ad119f952a8cd9512d87c4be9576331d81c696e4","typeString":"literal_string \"Balance To Low\""}],"id":998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3401:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3401:111:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"3401:111:6"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"ReffiAmount","nameLocation":"3533:11:6","nodeType":"VariableDeclaration","scope":1085,"src":"3525:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"3525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1014,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3557:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3547:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3525:38:6"},{"assignments":[1018],"declarations":[{"constant":false,"id":1018,"mutability":"mutable","name":"totalReffiBuy","nameLocation":"3582:13:6","nodeType":"VariableDeclaration","scope":1085,"src":"3574:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"3574:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1033,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"ReffiAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3601:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1020,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3615:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3601:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3600:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3627:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3600:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3599:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1026,"name":"ReffiAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3634:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3599:46:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3598:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3649:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3655:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3649:8:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3598:59:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3574:83:6"},{"expression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1034,"name":"PhaseSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3677:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1035,"name":"totalReffiBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"3693:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3677:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1037,"nodeType":"ExpressionStatement","src":"3677:29:6"},{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1038,"name":"TotalSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"3719:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1039,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3735:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3719:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1041,"nodeType":"ExpressionStatement","src":"3719:23:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1042,"name":"phaseInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3759:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":758,"src":"3759:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1044,"name":"PhaseSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3779:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3759:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"IfStatement","src":"3755:107:6","trueBody":{"id":1054,"nodeType":"Block","src":"3793:69:6","statements":[{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1046,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3808:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3808:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"3808:10:6"},{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1050,"name":"PhaseSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3833:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3849:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3833:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"nodeType":"ExpressionStatement","src":"3833:17:6"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3924:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3924:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"WalletDindon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"3936:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"3950:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1058,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3903:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1057,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3896:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":351,"src":"3896:27:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f7220696e205472616e73666572","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3973:19:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d","typeString":"literal_string \"Error in Transfer\""},"value":"Error in Transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d","typeString":"literal_string \"Error in Transfer\""}],"id":1056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3874:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3874:129:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1068,"nodeType":"ExpressionStatement","src":"3874:129:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1072,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4037:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4037:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"totalReffiBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4049:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1070,"name":"Reffi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"4022:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":319,"src":"4022:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4022:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f7220696e205472616e73666572","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4065:19:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d","typeString":"literal_string \"Error in Transfer\""},"value":"Error in Transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d","typeString":"literal_string \"Error in Transfer\""}],"id":1069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4014:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4014:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"4014:71:6"},{"eventCall":{"arguments":[{"expression":{"id":1080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4114:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4114:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1082,"name":"ReffiAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"4126:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"ReffiBuyed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"4103:10:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4103:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"EmitStatement","src":"4098:40:6"}]},"functionSelector":"5a53bf31","id":1086,"implemented":true,"kind":"function","modifiers":[{"id":955,"kind":"modifierInvocation","modifierName":{"id":954,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":250,"src":"3017:12:6"},"nodeType":"ModifierInvocation","src":"3017:12:6"},{"id":957,"kind":"modifierInvocation","modifierName":{"id":956,"name":"ContractLock","nodeType":"IdentifierPath","referencedDeclaration":810,"src":"3030:12:6"},"nodeType":"ModifierInvocation","src":"3030:12:6"}],"name":"BuyReffi","nameLocation":"2943:8:6","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"_token","nameLocation":"2970:6:6","nodeType":"VariableDeclaration","scope":1086,"src":"2962:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"2962:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"_amount","nameLocation":"2995:7:6","nodeType":"VariableDeclaration","scope":1086,"src":"2987:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2951:58:6"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"3043:0:6"},"scope":1298,"src":"2934:1212:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1125,"nodeType":"Block","src":"4182:280:6","statements":[{"expression":{"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1089,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4193:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":1091,"indexExpression":{"hexValue":"31","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4204:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4193:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"313030303030303030303030303030303030","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4216:18:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"100000000000000000"},{"hexValue":"36303036303030","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:13:6","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_6006000000000000000000000_by_1","typeString":"int_const 6006000000000000000000000"},"value":"6006000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},{"typeIdentifier":"t_rational_6006000000000000000000000_by_1","typeString":"int_const 6006000000000000000000000"}],"id":1092,"name":"Phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4209:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phases_$759_storage_ptr_$","typeString":"type(struct REFFISELL.Phases storage pointer)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"src":"4193:57:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":1097,"nodeType":"ExpressionStatement","src":"4193:57:6"},{"expression":{"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1098,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4261:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":1100,"indexExpression":{"hexValue":"32","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4272:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4261:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"313530303030303030303030303030303030","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4284:18:6","typeDescriptions":{"typeIdentifier":"t_rational_150000000000000000_by_1","typeString":"int_const 150000000000000000"},"value":"150000000000000000"},{"hexValue":"32363235303030","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:13:6","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"},"value":"2625000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_150000000000000000_by_1","typeString":"int_const 150000000000000000"},{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"}],"id":1101,"name":"Phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4277:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phases_$759_storage_ptr_$","typeString":"type(struct REFFISELL.Phases storage pointer)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4277:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"src":"4261:57:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":1106,"nodeType":"ExpressionStatement","src":"4261:57:6"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1107,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4329:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":1109,"indexExpression":{"hexValue":"33","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4340:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4329:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"323030303030303030303030303030303030","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4352:18:6","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000_by_1","typeString":"int_const 200000000000000000"},"value":"200000000000000000"},{"hexValue":"32363235303030","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4372:13:6","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"},"value":"2625000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200000000000000000_by_1","typeString":"int_const 200000000000000000"},{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"}],"id":1110,"name":"Phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4345:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phases_$759_storage_ptr_$","typeString":"type(struct REFFISELL.Phases storage pointer)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4345:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"src":"4329:57:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":1115,"nodeType":"ExpressionStatement","src":"4329:57:6"},{"expression":{"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1116,"name":"PhasesList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4397:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Phases_$759_storage_$","typeString":"mapping(uint256 => struct REFFISELL.Phases storage ref)"}},"id":1118,"indexExpression":{"hexValue":"34","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4397:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"323530303030303030303030303030303030","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4420:18:6","typeDescriptions":{"typeIdentifier":"t_rational_250000000000000000_by_1","typeString":"int_const 250000000000000000"},"value":"250000000000000000"},{"hexValue":"32363235303030","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4440:13:6","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"},"value":"2625000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_250000000000000000_by_1","typeString":"int_const 250000000000000000"},{"typeIdentifier":"t_rational_2625000000000000000000000_by_1","typeString":"int_const 2625000000000000000000000"}],"id":1119,"name":"Phases","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"4413:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Phases_$759_storage_ptr_$","typeString":"type(struct REFFISELL.Phases storage pointer)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4413:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_memory_ptr","typeString":"struct REFFISELL.Phases memory"}},"src":"4397:57:6","typeDescriptions":{"typeIdentifier":"t_struct$_Phases_$759_storage","typeString":"struct REFFISELL.Phases storage ref"}},"id":1124,"nodeType":"ExpressionStatement","src":"4397:57:6"}]},"functionSelector":"d3afd6ac","id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"addPhases","nameLocation":"4163:9:6","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"4172:2:6"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"4182:0:6"},"scope":1298,"src":"4154:308:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1208,"nodeType":"Block","src":"4563:704:6","statements":[{"expression":{"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1133,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4574:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4584:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4594:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4594:8:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4584:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4574:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1140,"nodeType":"ExpressionStatement","src":"4574:28:6"},{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"_percent","nameLocation":"4621:8:6","nodeType":"VariableDeclaration","scope":1208,"src":"4613:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"4613:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4632:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4613:20:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4811:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3530","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4822:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"4811:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4828:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313030","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4828:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4811:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1157,"nodeType":"IfStatement","src":"4807:75:6","trueBody":{"id":1156,"nodeType":"Block","src":"4842:40:6","statements":[{"expression":{"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4857:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4868:2:6","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"4857:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1155,"nodeType":"ExpressionStatement","src":"4857:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4898:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4898:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4916:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"353030","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:3:6","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"4916:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4898:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1170,"nodeType":"IfStatement","src":"4894:76:6","trueBody":{"id":1169,"nodeType":"Block","src":"4930:40:6","statements":[{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1165,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4945:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3530","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4956:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"4945:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ExpressionStatement","src":"4945:13:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"4986:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"353030","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4997:3:6","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"4986:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5004:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31303030","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5013:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"5004:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4986:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4982:78:6","trueBody":{"id":1182,"nodeType":"Block","src":"5019:41:6","statements":[{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1178,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5034:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5045:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5034:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ExpressionStatement","src":"5034:14:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5076:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31303030","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5087:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"5076:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5095:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"35303030","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5105:4:6","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"src":"5095:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5076:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"5072:80:6","trueBody":{"id":1195,"nodeType":"Block","src":"5111:41:6","statements":[{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1191,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5126:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313530","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5137:3:6","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"5126:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"5126:14:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5166:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"35303030","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5177:4:6","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"src":"5166:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"IfStatement","src":"5162:62:6","trueBody":{"id":1204,"nodeType":"Block","src":"5183:41:6","statements":[{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5198:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323030","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5209:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"5198:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1203,"nodeType":"ExpressionStatement","src":"5198:14:6"}]}},{"expression":{"id":1206,"name":"_percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5251:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1132,"id":1207,"nodeType":"Return","src":"5244:15:6"}]},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"GetPercent","nameLocation":"4479:10:6","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"_amount","nameLocation":"4508:7:6","nodeType":"VariableDeclaration","scope":1209,"src":"4500:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:33:6"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"percent","nameLocation":"4554:7:6","nodeType":"VariableDeclaration","scope":1209,"src":"4546:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"4546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4545:17:6"},"scope":1298,"src":"4470:797:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"5392:228:6","statements":[{"assignments":[1219],"declarations":[{"constant":false,"id":1219,"mutability":"mutable","name":"balanceVsion","nameLocation":"5411:12:6","nodeType":"VariableDeclaration","scope":1247,"src":"5403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5403:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5442:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1220,"name":"Vsion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5426:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":309,"src":"5426:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5426:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5403:45:6"},{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"NewPrice","nameLocation":"5467:8:6","nodeType":"VariableDeclaration","scope":1247,"src":"5459:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1228,"initialValue":{"id":1227,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5478:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5459:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1229,"name":"balanceVsion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"5499:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5514:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5518:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5524:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5518:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"5514:11:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"5499:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"5495:92:6","trueBody":{"id":1243,"nodeType":"Block","src":"5527:60:6","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1236,"name":"NewPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5542:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"302e3035","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5564:10:6","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"},"value":"0.05"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_50000000000000000_by_1","typeString":"int_const 50000000000000000"}],"expression":{"id":1237,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5553:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":565,"src":"5553:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5553:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5542:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ExpressionStatement","src":"5542:33:6"}]}},{"expression":{"id":1245,"name":"NewPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"5604:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1217,"id":1246,"nodeType":"Return","src":"5597:15:6"}]},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"GetPriceVsionHolder","nameLocation":"5284:19:6","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"_user","nameLocation":"5322:5:6","nodeType":"VariableDeclaration","scope":1248,"src":"5314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"5314:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"_price","nameLocation":"5346:6:6","nodeType":"VariableDeclaration","scope":1248,"src":"5338:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5338:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5303:56:6"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"5383:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"5383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5382:9:6"},"scope":1298,"src":"5275:345:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"5684:129:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1259,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"5733:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5733:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1267,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5788:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_REFFISELL_$1298","typeString":"contract REFFISELL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_REFFISELL_$1298","typeString":"contract REFFISELL"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5780:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"5780:7:6","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5780:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1262,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"5762:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1261,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5755:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5755:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":309,"src":"5755:24:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5755:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1256,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"5702:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1255,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"5695:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5695:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":319,"src":"5695:23:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5695:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1271,"nodeType":"ExpressionStatement","src":"5695:110:6"}]},"functionSelector":"478b0f87","id":1273,"implemented":true,"kind":"function","modifiers":[{"id":1253,"kind":"modifierInvocation","modifierName":{"id":1252,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5674:9:6"},"nodeType":"ModifierInvocation","src":"5674:9:6"}],"name":"RecoverTokens","nameLocation":"5637:13:6","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"_token","nameLocation":"5659:6:6","nodeType":"VariableDeclaration","scope":1273,"src":"5651:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:16:6"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[],"src":"5684:0:6"},"scope":1298,"src":"5628:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1284,"nodeType":"Block","src":"5878:38:6","statements":[{"expression":{"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1280,"name":"TotalSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5888:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1281,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5888:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1283,"nodeType":"ExpressionStatement","src":"5888:20:6"}]},"functionSelector":"1bfa3bf7","id":1285,"implemented":true,"kind":"function","modifiers":[{"id":1278,"kind":"modifierInvocation","modifierName":{"id":1277,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5868:9:6"},"nodeType":"ModifierInvocation","src":"5868:9:6"}],"name":"TokensSellAdd","nameLocation":"5830:13:6","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"_amount","nameLocation":"5852:7:6","nodeType":"VariableDeclaration","scope":1285,"src":"5844:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"5844:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5843:17:6"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"5878:0:6"},"scope":1298,"src":"5821:95:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1296,"nodeType":"Block","src":"5983:39:6","statements":[{"expression":{"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1292,"name":"PhaseSelling","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5994:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1293,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"6007:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5994:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1295,"nodeType":"ExpressionStatement","src":"5994:20:6"}]},"functionSelector":"08c174be","id":1297,"implemented":true,"kind":"function","modifiers":[{"id":1290,"kind":"modifierInvocation","modifierName":{"id":1289,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5973:9:6"},"nodeType":"ModifierInvocation","src":"5973:9:6"}],"name":"PhaseSellingAdd","nameLocation":"5933:15:6","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"_amount","nameLocation":"5957:7:6","nodeType":"VariableDeclaration","scope":1297,"src":"5949:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5949:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5948:17:6"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"5983:0:6"},"scope":1298,"src":"5924:98:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1299,"src":"354:5671:6","usedErrors":[]}],"src":"33:5994:6"},"id":6}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027738ad03d1d1291bc98af8466ac45350815c73b6c707974e6f015af3aa6a75f64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 PUSH20 0x8AD03D1D1291BC98AF8466AC45350815C73B6C70 PUSH26 0x74E6F015AF3AA6A75F64736F6C63430008090033000000000000 ","sourceMap":"482:6300:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027738ad03d1d1291bc98af8466ac45350815c73b6c707974e6f015af3aa6a75f64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 PUSH20 0x8AD03D1D1291BC98AF8466AC45350815C73B6C70 PUSH26 0x74E6F015AF3AA6A75F64736F6C63430008090033000000000000 ","sourceMap":"482:6300:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/refisell.sol":{"REFFISELL":{"abi":[{"inputs":[{"internalType":"address","name":"_criptovision","type":"address"},{"internalType":"address","name":"_refi","type":"address"},{"internalType":"address","name":"_walletDindon","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"refer","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"AirdopReferal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"ReffiBuyed","type":"event"},{"inputs":[{"internalType":"uint256","name":"_phase","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"AddPhase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"AddTokenAccept","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"AddWhiteList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"BuyReffi","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ChangeActivateWhiteList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_number","type":"uint256"}],"name":"ChangePhase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"ChangeWalletLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"PhaseSelling","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"PhaseSellingAdd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"RecoverTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"TokensSellAdd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"TotalSelling","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addPhases","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPhase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPhaseCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPhasePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_239":{"entryPoint":null,"id":239,"parameterSlots":0,"returnSlots":0},"@_800":{"entryPoint":null,"id":800,"parameterSlots":3,"returnSlots":0},"@_msgSender_364":{"entryPoint":null,"id":364,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":706,"id":111,"parameterSlots":1,"returnSlots":0},"@addPhases_1126":{"entryPoint":null,"id":1126,"parameterSlots":0,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":816,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:576:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:7","statements":[{"nodeType":"YulAssignment","src":"84:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:7"},"nodeType":"YulFunctionCall","src":"93:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:7"}]},{"body":{"nodeType":"YulBlock","src":"169:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:7"},"nodeType":"YulFunctionCall","src":"171:12:7"},"nodeType":"YulExpressionStatement","src":"171:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:7"},"nodeType":"YulFunctionCall","src":"150:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:7"},"nodeType":"YulFunctionCall","src":"146:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:7"},"nodeType":"YulFunctionCall","src":"135:31:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:7"},"nodeType":"YulFunctionCall","src":"125:42:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:7"},"nodeType":"YulFunctionCall","src":"118:50:7"},"nodeType":"YulIf","src":"115:70:7"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:7","type":""}],"src":"14:177:7"},{"body":{"nodeType":"YulBlock","src":"311:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:7"},"nodeType":"YulFunctionCall","src":"359:12:7"},"nodeType":"YulExpressionStatement","src":"359:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:7"},"nodeType":"YulFunctionCall","src":"328:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:7"},"nodeType":"YulFunctionCall","src":"324:32:7"},"nodeType":"YulIf","src":"321:52:7"},{"nodeType":"YulAssignment","src":"382:50:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:7"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:7"},"nodeType":"YulFunctionCall","src":"392:40:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:7"}]},{"nodeType":"YulAssignment","src":"441:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:7"},"nodeType":"YulFunctionCall","src":"481:18:7"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:7"},"nodeType":"YulFunctionCall","src":"451:49:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:7"}]},{"nodeType":"YulAssignment","src":"509:59:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:7"},"nodeType":"YulFunctionCall","src":"549:18:7"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:7"},"nodeType":"YulFunctionCall","src":"519:49:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:7","type":""}],"src":"196:378:7"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x136D CODESIZE SUB DUP1 PUSH2 0x136D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x42 CALLER PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND MUL OR DUP2 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP5 DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH11 0x4F7D1E992E034FDC00000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC DUP1 DUP5 MSTORE SWAP5 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5C SSTORE SWAP3 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5D SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH8 0x214E8348C4F0000 DUP2 MSTORE PUSH11 0x22BDD88FED9EFC6A00000 DUP2 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE DUP7 DUP6 MSTORE SWAP2 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD720 SSTORE SWAP1 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD721 SSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH8 0x2C68AF0BB140000 DUP2 MSTORE DUP1 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE DUP7 DUP6 MSTORE SWAP1 MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD7 SSTORE MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD8 SSTORE DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE PUSH8 0x3782DACE9D90000 DUP7 MSTORE DUP6 DUP4 ADD SWAP1 DUP2 MSTORE SWAP6 DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP3 MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8097 SSTORE SWAP3 MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8098 SSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH32 0xB0775D57C3EEB070F58D410E36E9FF396813A5D76997D9A91BDF10F0798296F0 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH20 0xE9E7CEA3DEDCA5984780BAFC599BD69ADD087D56 SWAP1 SWAP3 MSTORE PUSH32 0x588F8BCA8B2048A19EA94CC48F893D0BDE00A1FAADB2E5327AA9408686F2BDF2 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34E DUP5 PUSH2 0x314 JUMP JUMPDEST SWAP3 POP PUSH2 0x35C PUSH1 0x20 DUP6 ADD PUSH2 0x314 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A PUSH1 0x40 DUP6 ADD PUSH2 0x314 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xFEB DUP1 PUSH2 0x382 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x939EDD0E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE7CC0F79 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7CC0F79 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xECED0280 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xF83D08BA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xF8D5F409 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF9B49640 EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x939EDD0E EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xC362D20C EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xCF922B1E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xD3AFD6AC EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x478B0F87 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x478B0F87 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5A53BF31 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x6F6A5D06 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C174BE EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x120005AE EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x1BFA3BF7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1C5F8024 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x2FEA6AC4 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0x14F PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x164 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x14F PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH11 0x4F7D1E992E034FDC00000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP1 DUP4 MSTORE SWAP4 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5C SSTORE SWAP2 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5D SSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH8 0x214E8348C4F0000 DUP2 MSTORE PUSH11 0x22BDD88FED9EFC6A00000 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP2 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD720 SSTORE SWAP1 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD721 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH8 0x2C68AF0BB140000 DUP2 MSTORE DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP1 MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD7 SSTORE MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD8 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH8 0x3782DACE9D90000 DUP6 MSTORE DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8097 SSTORE MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8098 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x164 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x164 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x14F PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x164 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45C PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x469 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0xC SWAP1 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x4F9 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x56656E74612050617573616461 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B2102A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH2 0x6CF DUP4 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E1 CALLER DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E2057686974654C6973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST LT ISZERO PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x42616C616E636520546F204C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP3 DUP7 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x64 PUSH2 0x82A DUP7 DUP4 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x834 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x850 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x864 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x20 DUP7 ADD MLOAD EQ ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x22B93937B91034B7102A3930B739B332B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x22B93937B91034B7102A3930B739B332B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1ECC62D178AB4FFE6884F1463E2F3F563FA4090EF4F4A9C7C2682D9AA81ABD20 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0x5EE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xAAA PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAD3 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xADD PUSH1 0x0 PUSH2 0xDE9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xB3D PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x639 JUMP JUMPDEST PUSH2 0xBAB DUP2 PUSH2 0xDE9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB9 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x32 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI POP PUSH1 0x64 DUP4 LT JUMPDEST ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x19 JUMPDEST PUSH1 0x64 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xCE9 JUMPI POP PUSH2 0x1F4 DUP4 LT JUMPDEST ISZERO PUSH2 0xCF2 JUMPI POP PUSH1 0x32 JUMPDEST PUSH2 0x1F4 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI POP PUSH2 0x3E8 DUP4 LT JUMPDEST ISZERO PUSH2 0xD0E JUMPI POP PUSH1 0x64 JUMPDEST PUSH2 0x3E8 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI POP PUSH2 0x1388 DUP4 LT JUMPDEST ISZERO PUSH2 0xD2A JUMPI POP PUSH1 0x96 JUMPDEST PUSH2 0x1388 DUP4 LT PUSH2 0xD37 JUMPI POP PUSH1 0xC8 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP3 PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0xDE1 JUMPI PUSH2 0xDDE DUP5 PUSH7 0xB1A2BC2EC50000 PUSH2 0xE3B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE47 DUP3 DUP5 PUSH2 0xF9E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP4 PUSH2 0xE93 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF62 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF81 JUMPI PUSH2 0xF81 PUSH2 0xF2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF99 JUMPI PUSH2 0xF99 PUSH2 0xF2F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0xFB0 PUSH2 0xF2F JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE0 0xDA KECCAK256 DUP15 EQ 0xFB SIGNEXTEND PUSH10 0x6E450D1B82D928B4FEB4 TIMESTAMP EQ STOP JUMPDEST DIV 0xBF CALLDATASIZE DELEGATECALL 0xDC SWAP4 0xE8 EXP DUP10 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"354:5671:6:-:0;;;457:1;441:17;;1106:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;936:32:0;719:10:4;936:18:0;:32::i;:::-;1190:12:6;:28;;-1:-1:-1;;;;;;1190:28:6;;-1:-1:-1;;;;;1190:28:6;;;;;;;1229:5;:21;;-1:-1:-1;;;;;;1229:21:6;;;;;;;;;;;;1261:5;:29;;;;;;;;;;;;;;;4209:41;;;;;;;;4216:18;4209:41;;4236:13;4209:41;;;;;;;-1:-1:-1;;4193:13:6;;;:10;:13;;;:57;;:13;:57;;;;;4277:41;;;;;;;4284:18;4277:41;;4304:13;4277:41;;;;;;4272:1;4261:13;;;;;:57;;:13;:57;;;;;4345:41;;;;;;;4352:18;4345:41;;;;;;;;4340:1;4329:13;;;;;:57;;:13;:57;;;;4413:41;;;;;;;;4420:18;4413:41;;;;;;;;4397:13;;;;;;:57;;:13;:57;;;;;1323:12;:56;;;;:63;;-1:-1:-1;;1323:63:6;;;;;;;;1410:42;1397:56;;;;:63;;;;;;;;354:5671;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;354:5671:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AddPhase_862":{"entryPoint":1134,"id":862,"parameterSlots":3,"returnSlots":0},"@AddTokenAccept_906":{"entryPoint":1188,"id":906,"parameterSlots":1,"returnSlots":0},"@AddWhiteList_892":{"entryPoint":3013,"id":892,"parameterSlots":1,"returnSlots":0},"@BuyReffi_1086":{"entryPoint":1522,"id":1086,"parameterSlots":2,"returnSlots":0},"@ChangeActivateWhiteList_841":{"entryPoint":2722,"id":841,"parameterSlots":0,"returnSlots":0},"@ChangePhase_878":{"entryPoint":2851,"id":878,"parameterSlots":1,"returnSlots":0},"@ChangeWalletLiquidity_948":{"entryPoint":2783,"id":948,"parameterSlots":1,"returnSlots":0},"@GetPercent_1209":{"entryPoint":3237,"id":1209,"parameterSlots":1,"returnSlots":1},"@GetPriceVsionHolder_1248":{"entryPoint":3389,"id":1248,"parameterSlots":2,"returnSlots":1},"@PhaseSellingAdd_1297":{"entryPoint":1108,"id":1297,"parameterSlots":1,"returnSlots":0},"@PhaseSelling_713":{"entryPoint":null,"id":713,"parameterSlots":0,"returnSlots":0},"@RecoverTokens_1273":{"entryPoint":1232,"id":1273,"parameterSlots":1,"returnSlots":0},"@TokensSellAdd_1285":{"entryPoint":1121,"id":1285,"parameterSlots":1,"returnSlots":0},"@TotalSelling_715":{"entryPoint":null,"id":715,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3057,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_364":{"entryPoint":null,"id":364,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_273":{"entryPoint":null,"id":273,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_265":{"entryPoint":3147,"id":265,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3561,"id":111,"parameterSlots":1,"returnSlots":0},"@addPhases_1126":{"entryPoint":null,"id":1126,"parameterSlots":0,"returnSlots":0},"@getPhaseCost_936":{"entryPoint":null,"id":936,"parameterSlots":0,"returnSlots":1},"@getPhasePrice_925":{"entryPoint":null,"id":925,"parameterSlots":0,"returnSlots":1},"@getPhase_914":{"entryPoint":null,"id":914,"parameterSlots":0,"returnSlots":1},"@lock_820":{"entryPoint":2990,"id":820,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2763,"id":68,"parameterSlots":0,"returnSlots":0},"@sub_565":{"entryPoint":3643,"id":565,"parameterSlots":2,"returnSlots":1},"@transferOwnership_91":{"entryPoint":2869,"id":91,"parameterSlots":1,"returnSlots":0},"@unlock_830":{"entryPoint":2831,"id":830,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3759,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3786,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":3687,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51e8ae25417ee5580fe3609896b805ca8d874424103baccea570cf7441e53704__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_69684167b8989c9b554e4e0e783342da6887d9eec48ee81663338eb681a6b347__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_af0aebe545e05f4b7a9b9563ad119f952a8cd9512d87c4be9576331d81c696e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc50684a1b72a05b0312de1d8d3b6e2417754ef81ff87989e398a892013c10d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3974,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3943,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3998,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3887,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6309:7","statements":[{"nodeType":"YulBlock","src":"6:3:7","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:7","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:7"},"nodeType":"YulFunctionCall","src":"132:12:7"},"nodeType":"YulExpressionStatement","src":"132:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:7"},"nodeType":"YulFunctionCall","src":"101:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:7"},"nodeType":"YulFunctionCall","src":"97:32:7"},"nodeType":"YulIf","src":"94:52:7"},{"nodeType":"YulAssignment","src":"155:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:7"},"nodeType":"YulFunctionCall","src":"165:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:7"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:7","type":""}],"src":"14:180:7"},{"body":{"nodeType":"YulBlock","src":"300:76:7","statements":[{"nodeType":"YulAssignment","src":"310:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"333:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"318:3:7"},"nodeType":"YulFunctionCall","src":"318:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"310:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"352:9:7"},{"name":"value0","nodeType":"YulIdentifier","src":"363:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"345:6:7"},"nodeType":"YulFunctionCall","src":"345:25:7"},"nodeType":"YulExpressionStatement","src":"345:25:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"269:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"280:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"291:4:7","type":""}],"src":"199:177:7"},{"body":{"nodeType":"YulBlock","src":"485:212:7","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:7"},"nodeType":"YulFunctionCall","src":"533:12:7"},"nodeType":"YulExpressionStatement","src":"533:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"506:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"515:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"502:3:7"},"nodeType":"YulFunctionCall","src":"502:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"527:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"498:3:7"},"nodeType":"YulFunctionCall","src":"498:32:7"},"nodeType":"YulIf","src":"495:52:7"},{"nodeType":"YulAssignment","src":"556:33:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"566:12:7"},"nodeType":"YulFunctionCall","src":"566:23:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"556:6:7"}]},{"nodeType":"YulAssignment","src":"598:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"625:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"636:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:7"},"nodeType":"YulFunctionCall","src":"621:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"608:12:7"},"nodeType":"YulFunctionCall","src":"608:32:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"598:6:7"}]},{"nodeType":"YulAssignment","src":"649:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"676:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"687:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:7"},"nodeType":"YulFunctionCall","src":"672:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"659:12:7"},"nodeType":"YulFunctionCall","src":"659:32:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"649:6:7"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"446:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"458:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"466:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"474:6:7","type":""}],"src":"381:316:7"},{"body":{"nodeType":"YulBlock","src":"751:124:7","statements":[{"nodeType":"YulAssignment","src":"761:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"783:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"770:12:7"},"nodeType":"YulFunctionCall","src":"770:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"761:5:7"}]},{"body":{"nodeType":"YulBlock","src":"853:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"862:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"865:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"855:6:7"},"nodeType":"YulFunctionCall","src":"855:12:7"},"nodeType":"YulExpressionStatement","src":"855:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"812:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"838:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"843:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"834:3:7"},"nodeType":"YulFunctionCall","src":"834:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"830:3:7"},"nodeType":"YulFunctionCall","src":"830:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"819:3:7"},"nodeType":"YulFunctionCall","src":"819:31:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"809:2:7"},"nodeType":"YulFunctionCall","src":"809:42:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"802:6:7"},"nodeType":"YulFunctionCall","src":"802:50:7"},"nodeType":"YulIf","src":"799:70:7"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"730:6:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"741:5:7","type":""}],"src":"702:173:7"},{"body":{"nodeType":"YulBlock","src":"950:116:7","statements":[{"body":{"nodeType":"YulBlock","src":"996:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1005:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"998:6:7"},"nodeType":"YulFunctionCall","src":"998:12:7"},"nodeType":"YulExpressionStatement","src":"998:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"971:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"980:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"967:3:7"},"nodeType":"YulFunctionCall","src":"967:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"992:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"963:3:7"},"nodeType":"YulFunctionCall","src":"963:32:7"},"nodeType":"YulIf","src":"960:52:7"},{"nodeType":"YulAssignment","src":"1021:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1050:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1031:18:7"},"nodeType":"YulFunctionCall","src":"1031:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1021:6:7"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"916:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"927:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"939:6:7","type":""}],"src":"880:186:7"},{"body":{"nodeType":"YulBlock","src":"1158:167:7","statements":[{"body":{"nodeType":"YulBlock","src":"1204:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1213:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1206:6:7"},"nodeType":"YulFunctionCall","src":"1206:12:7"},"nodeType":"YulExpressionStatement","src":"1206:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1179:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1188:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1175:3:7"},"nodeType":"YulFunctionCall","src":"1175:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1200:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1171:3:7"},"nodeType":"YulFunctionCall","src":"1171:32:7"},"nodeType":"YulIf","src":"1168:52:7"},{"nodeType":"YulAssignment","src":"1229:39:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1258:9:7"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1239:18:7"},"nodeType":"YulFunctionCall","src":"1239:29:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1229:6:7"}]},{"nodeType":"YulAssignment","src":"1277:42:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1304:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1315:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:7"},"nodeType":"YulFunctionCall","src":"1300:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1287:12:7"},"nodeType":"YulFunctionCall","src":"1287:32:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1277:6:7"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1116:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1127:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1139:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1147:6:7","type":""}],"src":"1071:254:7"},{"body":{"nodeType":"YulBlock","src":"1431:102:7","statements":[{"nodeType":"YulAssignment","src":"1441:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1464:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1449:3:7"},"nodeType":"YulFunctionCall","src":"1449:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1441:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1498:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1514:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1519:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1510:3:7"},"nodeType":"YulFunctionCall","src":"1510:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"1523:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1506:3:7"},"nodeType":"YulFunctionCall","src":"1506:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1494:3:7"},"nodeType":"YulFunctionCall","src":"1494:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1476:6:7"},"nodeType":"YulFunctionCall","src":"1476:51:7"},"nodeType":"YulExpressionStatement","src":"1476:51:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1400:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1411:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1422:4:7","type":""}],"src":"1330:203:7"},{"body":{"nodeType":"YulBlock","src":"1619:103:7","statements":[{"body":{"nodeType":"YulBlock","src":"1665:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1674:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1677:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1667:6:7"},"nodeType":"YulFunctionCall","src":"1667:12:7"},"nodeType":"YulExpressionStatement","src":"1667:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1636:3:7"},"nodeType":"YulFunctionCall","src":"1636:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"1661:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1632:3:7"},"nodeType":"YulFunctionCall","src":"1632:32:7"},"nodeType":"YulIf","src":"1629:52:7"},{"nodeType":"YulAssignment","src":"1690:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1706:9:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1700:5:7"},"nodeType":"YulFunctionCall","src":"1700:16:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1690:6:7"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1585:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1596:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1608:6:7","type":""}],"src":"1538:184:7"},{"body":{"nodeType":"YulBlock","src":"1856:145:7","statements":[{"nodeType":"YulAssignment","src":"1866:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:7"},"nodeType":"YulFunctionCall","src":"1874:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1866:4:7"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1908:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1923:6:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1944:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1935:3:7"},"nodeType":"YulFunctionCall","src":"1935:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"1948:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1931:3:7"},"nodeType":"YulFunctionCall","src":"1931:19:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1919:3:7"},"nodeType":"YulFunctionCall","src":"1919:32:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1901:6:7"},"nodeType":"YulFunctionCall","src":"1901:51:7"},"nodeType":"YulExpressionStatement","src":"1901:51:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1972:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1983:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:7"},"nodeType":"YulFunctionCall","src":"1968:18:7"},{"name":"value1","nodeType":"YulIdentifier","src":"1988:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1961:6:7"},"nodeType":"YulFunctionCall","src":"1961:34:7"},"nodeType":"YulExpressionStatement","src":"1961:34:7"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1817:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1828:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1836:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1847:4:7","type":""}],"src":"1727:274:7"},{"body":{"nodeType":"YulBlock","src":"2084:199:7","statements":[{"body":{"nodeType":"YulBlock","src":"2130:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2139:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2142:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2132:6:7"},"nodeType":"YulFunctionCall","src":"2132:12:7"},"nodeType":"YulExpressionStatement","src":"2132:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2105:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"2114:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2101:3:7"},"nodeType":"YulFunctionCall","src":"2101:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"2126:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2097:3:7"},"nodeType":"YulFunctionCall","src":"2097:32:7"},"nodeType":"YulIf","src":"2094:52:7"},{"nodeType":"YulVariableDeclaration","src":"2155:29:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2174:9:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2168:5:7"},"nodeType":"YulFunctionCall","src":"2168:16:7"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2159:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2237:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2246:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2249:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2239:6:7"},"nodeType":"YulFunctionCall","src":"2239:12:7"},"nodeType":"YulExpressionStatement","src":"2239:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2206:5:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2227:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2220:6:7"},"nodeType":"YulFunctionCall","src":"2220:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2213:6:7"},"nodeType":"YulFunctionCall","src":"2213:21:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2203:2:7"},"nodeType":"YulFunctionCall","src":"2203:32:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2196:6:7"},"nodeType":"YulFunctionCall","src":"2196:40:7"},"nodeType":"YulIf","src":"2193:60:7"},{"nodeType":"YulAssignment","src":"2262:15:7","value":{"name":"value","nodeType":"YulIdentifier","src":"2272:5:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:7"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2050:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2061:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2073:6:7","type":""}],"src":"2006:277:7"},{"body":{"nodeType":"YulBlock","src":"2462:163:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2490:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2472:6:7"},"nodeType":"YulFunctionCall","src":"2472:21:7"},"nodeType":"YulExpressionStatement","src":"2472:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2513:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2524:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:7"},"nodeType":"YulFunctionCall","src":"2509:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:7","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2502:6:7"},"nodeType":"YulFunctionCall","src":"2502:30:7"},"nodeType":"YulExpressionStatement","src":"2502:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2552:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2563:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2548:3:7"},"nodeType":"YulFunctionCall","src":"2548:18:7"},{"hexValue":"56656e74612050617573616461","kind":"string","nodeType":"YulLiteral","src":"2568:15:7","type":"","value":"Venta Pausada"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2541:6:7"},"nodeType":"YulFunctionCall","src":"2541:43:7"},"nodeType":"YulExpressionStatement","src":"2541:43:7"},{"nodeType":"YulAssignment","src":"2593:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2605:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2616:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2601:3:7"},"nodeType":"YulFunctionCall","src":"2601:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2593:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_51e8ae25417ee5580fe3609896b805ca8d874424103baccea570cf7441e53704__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2439:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2453:4:7","type":""}],"src":"2288:337:7"},{"body":{"nodeType":"YulBlock","src":"2804:163:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2832:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2814:6:7"},"nodeType":"YulFunctionCall","src":"2814:21:7"},"nodeType":"YulExpressionStatement","src":"2814:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2855:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2866:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2851:3:7"},"nodeType":"YulFunctionCall","src":"2851:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"2871:2:7","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2844:6:7"},"nodeType":"YulFunctionCall","src":"2844:30:7"},"nodeType":"YulExpressionStatement","src":"2844:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2894:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2890:3:7"},"nodeType":"YulFunctionCall","src":"2890:18:7"},{"hexValue":"496e76616c696420546f6b656e","kind":"string","nodeType":"YulLiteral","src":"2910:15:7","type":"","value":"Invalid Token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2883:6:7"},"nodeType":"YulFunctionCall","src":"2883:43:7"},"nodeType":"YulExpressionStatement","src":"2883:43:7"},{"nodeType":"YulAssignment","src":"2935:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2947:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2958:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2943:3:7"},"nodeType":"YulFunctionCall","src":"2943:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2935:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc50684a1b72a05b0312de1d8d3b6e2417754ef81ff87989e398a892013c10d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2781:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2795:4:7","type":""}],"src":"2630:337:7"},{"body":{"nodeType":"YulBlock","src":"3146:174:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3174:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3156:6:7"},"nodeType":"YulFunctionCall","src":"3156:21:7"},"nodeType":"YulExpressionStatement","src":"3156:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3208:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:7"},"nodeType":"YulFunctionCall","src":"3193:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:7","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3186:6:7"},"nodeType":"YulFunctionCall","src":"3186:30:7"},"nodeType":"YulExpressionStatement","src":"3186:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3236:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3247:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:7"},"nodeType":"YulFunctionCall","src":"3232:18:7"},{"hexValue":"596f7520617265206e6f7420696e2057686974654c697374","kind":"string","nodeType":"YulLiteral","src":"3252:26:7","type":"","value":"You are not in WhiteList"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:7"},"nodeType":"YulFunctionCall","src":"3225:54:7"},"nodeType":"YulExpressionStatement","src":"3225:54:7"},{"nodeType":"YulAssignment","src":"3288:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3300:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3311:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3296:3:7"},"nodeType":"YulFunctionCall","src":"3296:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3288:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_69684167b8989c9b554e4e0e783342da6887d9eec48ee81663338eb681a6b347__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3123:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3137:4:7","type":""}],"src":"2972:348:7"},{"body":{"nodeType":"YulBlock","src":"3499:164:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3516:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3527:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3509:6:7"},"nodeType":"YulFunctionCall","src":"3509:21:7"},"nodeType":"YulExpressionStatement","src":"3509:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3550:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3561:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3546:3:7"},"nodeType":"YulFunctionCall","src":"3546:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"3566:2:7","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3539:6:7"},"nodeType":"YulFunctionCall","src":"3539:30:7"},"nodeType":"YulExpressionStatement","src":"3539:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3589:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3600:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3585:3:7"},"nodeType":"YulFunctionCall","src":"3585:18:7"},{"hexValue":"42616c616e636520546f204c6f77","kind":"string","nodeType":"YulLiteral","src":"3605:16:7","type":"","value":"Balance To Low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3578:6:7"},"nodeType":"YulFunctionCall","src":"3578:44:7"},"nodeType":"YulExpressionStatement","src":"3578:44:7"},{"nodeType":"YulAssignment","src":"3631:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3643:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3639:3:7"},"nodeType":"YulFunctionCall","src":"3639:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3631:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_af0aebe545e05f4b7a9b9563ad119f952a8cd9512d87c4be9576331d81c696e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3476:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3490:4:7","type":""}],"src":"3325:338:7"},{"body":{"nodeType":"YulBlock","src":"3700:95:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3717:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3724:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3729:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3720:3:7"},"nodeType":"YulFunctionCall","src":"3720:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3710:6:7"},"nodeType":"YulFunctionCall","src":"3710:31:7"},"nodeType":"YulExpressionStatement","src":"3710:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3757:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3760:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:7"},"nodeType":"YulFunctionCall","src":"3750:15:7"},"nodeType":"YulExpressionStatement","src":"3750:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3781:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3784:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3774:6:7"},"nodeType":"YulFunctionCall","src":"3774:15:7"},"nodeType":"YulExpressionStatement","src":"3774:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3668:127:7"},{"body":{"nodeType":"YulBlock","src":"3846:171:7","statements":[{"body":{"nodeType":"YulBlock","src":"3877:111:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3898:1:7","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3905:3:7","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3910:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3901:3:7"},"nodeType":"YulFunctionCall","src":"3901:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3891:6:7"},"nodeType":"YulFunctionCall","src":"3891:31:7"},"nodeType":"YulExpressionStatement","src":"3891:31:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3942:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:7","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3935:6:7"},"nodeType":"YulFunctionCall","src":"3935:15:7"},"nodeType":"YulExpressionStatement","src":"3935:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3970:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3973:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3963:6:7"},"nodeType":"YulFunctionCall","src":"3963:15:7"},"nodeType":"YulExpressionStatement","src":"3963:15:7"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3866:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3859:6:7"},"nodeType":"YulFunctionCall","src":"3859:9:7"},"nodeType":"YulIf","src":"3856:132:7"},{"nodeType":"YulAssignment","src":"3997:14:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4006:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"4009:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:7"},"nodeType":"YulFunctionCall","src":"4002:9:7"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3997:1:7"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3831:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"3834:1:7","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3840:1:7","type":""}],"src":"3800:217:7"},{"body":{"nodeType":"YulBlock","src":"4074:116:7","statements":[{"body":{"nodeType":"YulBlock","src":"4133:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4135:16:7"},"nodeType":"YulFunctionCall","src":"4135:18:7"},"nodeType":"YulExpressionStatement","src":"4135:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4105:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4098:6:7"},"nodeType":"YulFunctionCall","src":"4098:9:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4091:6:7"},"nodeType":"YulFunctionCall","src":"4091:17:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4113:1:7"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4124:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4120:3:7"},"nodeType":"YulFunctionCall","src":"4120:6:7"},{"name":"x","nodeType":"YulIdentifier","src":"4128:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4116:3:7"},"nodeType":"YulFunctionCall","src":"4116:14:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4110:2:7"},"nodeType":"YulFunctionCall","src":"4110:21:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4087:3:7"},"nodeType":"YulFunctionCall","src":"4087:45:7"},"nodeType":"YulIf","src":"4084:71:7"},{"nodeType":"YulAssignment","src":"4164:20:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4179:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"4182:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4175:3:7"},"nodeType":"YulFunctionCall","src":"4175:9:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4164:7:7"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4053:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"4056:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4062:7:7","type":""}],"src":"4022:168:7"},{"body":{"nodeType":"YulBlock","src":"4243:80:7","statements":[{"body":{"nodeType":"YulBlock","src":"4270:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4272:16:7"},"nodeType":"YulFunctionCall","src":"4272:18:7"},"nodeType":"YulExpressionStatement","src":"4272:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4259:1:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4266:1:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4262:3:7"},"nodeType":"YulFunctionCall","src":"4262:6:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4256:2:7"},"nodeType":"YulFunctionCall","src":"4256:13:7"},"nodeType":"YulIf","src":"4253:39:7"},{"nodeType":"YulAssignment","src":"4301:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4312:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"4315:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4308:3:7"},"nodeType":"YulFunctionCall","src":"4308:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4301:3:7"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4226:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"4229:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4235:3:7","type":""}],"src":"4195:128:7"},{"body":{"nodeType":"YulBlock","src":"4485:218:7","statements":[{"nodeType":"YulAssignment","src":"4495:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4507:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4518:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4503:3:7"},"nodeType":"YulFunctionCall","src":"4503:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4495:4:7"}]},{"nodeType":"YulVariableDeclaration","src":"4530:29:7","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4548:3:7","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4553:1:7","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4544:3:7"},"nodeType":"YulFunctionCall","src":"4544:11:7"},{"kind":"number","nodeType":"YulLiteral","src":"4557:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4540:3:7"},"nodeType":"YulFunctionCall","src":"4540:19:7"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4534:2:7","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4575:9:7"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4590:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"4598:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4586:3:7"},"nodeType":"YulFunctionCall","src":"4586:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4568:6:7"},"nodeType":"YulFunctionCall","src":"4568:34:7"},"nodeType":"YulExpressionStatement","src":"4568:34:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4622:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4633:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4618:3:7"},"nodeType":"YulFunctionCall","src":"4618:18:7"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4642:6:7"},{"name":"_1","nodeType":"YulIdentifier","src":"4650:2:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4638:3:7"},"nodeType":"YulFunctionCall","src":"4638:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4611:6:7"},"nodeType":"YulFunctionCall","src":"4611:43:7"},"nodeType":"YulExpressionStatement","src":"4611:43:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:7"},"nodeType":"YulFunctionCall","src":"4670:18:7"},{"name":"value2","nodeType":"YulIdentifier","src":"4690:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4663:6:7"},"nodeType":"YulFunctionCall","src":"4663:34:7"},"nodeType":"YulExpressionStatement","src":"4663:34:7"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4438:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4449:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4457:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4465:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4476:4:7","type":""}],"src":"4328:375:7"},{"body":{"nodeType":"YulBlock","src":"4882:167:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4899:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4910:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4892:6:7"},"nodeType":"YulFunctionCall","src":"4892:21:7"},"nodeType":"YulExpressionStatement","src":"4892:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4933:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4944:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4929:3:7"},"nodeType":"YulFunctionCall","src":"4929:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:7","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4922:6:7"},"nodeType":"YulFunctionCall","src":"4922:30:7"},"nodeType":"YulExpressionStatement","src":"4922:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"4983:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:7"},"nodeType":"YulFunctionCall","src":"4968:18:7"},{"hexValue":"4572726f7220696e205472616e73666572","kind":"string","nodeType":"YulLiteral","src":"4988:19:7","type":"","value":"Error in Transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4961:6:7"},"nodeType":"YulFunctionCall","src":"4961:47:7"},"nodeType":"YulExpressionStatement","src":"4961:47:7"},{"nodeType":"YulAssignment","src":"5017:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5029:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5040:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5025:3:7"},"nodeType":"YulFunctionCall","src":"5025:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5017:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4859:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4873:4:7","type":""}],"src":"4708:341:7"},{"body":{"nodeType":"YulBlock","src":"5228:228:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5256:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5238:6:7"},"nodeType":"YulFunctionCall","src":"5238:21:7"},"nodeType":"YulExpressionStatement","src":"5238:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5279:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5290:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5275:3:7"},"nodeType":"YulFunctionCall","src":"5275:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"5295:2:7","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5268:6:7"},"nodeType":"YulFunctionCall","src":"5268:30:7"},"nodeType":"YulExpressionStatement","src":"5268:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5318:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5329:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5314:3:7"},"nodeType":"YulFunctionCall","src":"5314:18:7"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"5334:34:7","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5307:6:7"},"nodeType":"YulFunctionCall","src":"5307:62:7"},"nodeType":"YulExpressionStatement","src":"5307:62:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5389:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5400:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5385:3:7"},"nodeType":"YulFunctionCall","src":"5385:18:7"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"5405:8:7","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5378:6:7"},"nodeType":"YulFunctionCall","src":"5378:36:7"},"nodeType":"YulExpressionStatement","src":"5378:36:7"},{"nodeType":"YulAssignment","src":"5423:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5435:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5446:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5431:3:7"},"nodeType":"YulFunctionCall","src":"5431:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5423:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5205:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5219:4:7","type":""}],"src":"5054:402:7"},{"body":{"nodeType":"YulBlock","src":"5635:182:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5645:6:7"},"nodeType":"YulFunctionCall","src":"5645:21:7"},"nodeType":"YulExpressionStatement","src":"5645:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5686:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5697:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5682:3:7"},"nodeType":"YulFunctionCall","src":"5682:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"5702:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5675:6:7"},"nodeType":"YulFunctionCall","src":"5675:30:7"},"nodeType":"YulExpressionStatement","src":"5675:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5725:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5736:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5721:3:7"},"nodeType":"YulFunctionCall","src":"5721:18:7"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5741:34:7","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5714:6:7"},"nodeType":"YulFunctionCall","src":"5714:62:7"},"nodeType":"YulExpressionStatement","src":"5714:62:7"},{"nodeType":"YulAssignment","src":"5785:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5797:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5808:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5793:3:7"},"nodeType":"YulFunctionCall","src":"5793:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5785:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5612:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5626:4:7","type":""}],"src":"5461:356:7"},{"body":{"nodeType":"YulBlock","src":"5996:181:7","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6013:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6024:2:7","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6006:6:7"},"nodeType":"YulFunctionCall","src":"6006:21:7"},"nodeType":"YulExpressionStatement","src":"6006:21:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6047:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6058:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6043:3:7"},"nodeType":"YulFunctionCall","src":"6043:18:7"},{"kind":"number","nodeType":"YulLiteral","src":"6063:2:7","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6036:6:7"},"nodeType":"YulFunctionCall","src":"6036:30:7"},"nodeType":"YulExpressionStatement","src":"6036:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6086:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6097:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6082:3:7"},"nodeType":"YulFunctionCall","src":"6082:18:7"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6102:33:7","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6075:6:7"},"nodeType":"YulFunctionCall","src":"6075:61:7"},"nodeType":"YulExpressionStatement","src":"6075:61:7"},{"nodeType":"YulAssignment","src":"6145:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6157:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6168:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:7"},"nodeType":"YulFunctionCall","src":"6153:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6145:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5973:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5987:4:7","type":""}],"src":"5822:355:7"},{"body":{"nodeType":"YulBlock","src":"6231:76:7","statements":[{"body":{"nodeType":"YulBlock","src":"6253:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6255:16:7"},"nodeType":"YulFunctionCall","src":"6255:18:7"},"nodeType":"YulExpressionStatement","src":"6255:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6247:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"6250:1:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6244:2:7"},"nodeType":"YulFunctionCall","src":"6244:8:7"},"nodeType":"YulIf","src":"6241:34:7"},{"nodeType":"YulAssignment","src":"6284:17:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6296:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"6299:1:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6292:3:7"},"nodeType":"YulFunctionCall","src":"6292:9:7"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6284:4:7"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6213:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"6216:1:7","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6222:4:7","type":""}],"src":"6182:125:7"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_51e8ae25417ee5580fe3609896b805ca8d874424103baccea570cf7441e53704__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Venta Pausada\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc50684a1b72a05b0312de1d8d3b6e2417754ef81ff87989e398a892013c10d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid Token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69684167b8989c9b554e4e0e783342da6887d9eec48ee81663338eb681a6b347__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"You are not in WhiteList\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_af0aebe545e05f4b7a9b9563ad119f952a8cd9512d87c4be9576331d81c696e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Balance To Low\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c16e47d529bd14140caa855339356d15d88ac2d3d4ff543eb43af51f558e857d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Error in Transfer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c8063939edd0e116100b8578063e7cc0f791161007c578063e7cc0f79146103fb578063eced028014610415578063f2fde38b1461041d578063f83d08ba14610430578063f8d5f40914610438578063f9b496401461044b57600080fd5b8063939edd0e14610201578063a69df4b514610214578063c362d20c1461021c578063cf922b1e14610225578063d3afd6ac1461023857600080fd5b8063478b0f87116100ff578063478b0f87146101b05780635a53bf31146101c35780636f6a5d06146101d6578063715018a6146101de5780638da5cb5b146101e657600080fd5b806308c174be1461013c578063120005ae146101515780631bfa3bf7146101775780631c5f80241461018a5780632fea6ac41461019d575b600080fd5b61014f61014a366004610e4e565b610454565b005b6002546000908152600c60205260409020545b6040519081526020015b60405180910390f35b61014f610185366004610e4e565b610461565b61014f610198366004610e67565b61046e565b61014f6101ab366004610eaf565b6104a4565b61014f6101be366004610eaf565b6104d0565b61014f6101d1366004610eca565b6105f2565b61014f610aa2565b61014f610acb565b6001546040516001600160a01b03909116815260200161016e565b61014f61020f366004610eaf565b610adf565b61014f610b0f565b61016460055481565b61014f610233366004610e4e565b610b23565b61014f60408051808201825267016345785d8a000081526a04f7d1e992e034fdc00000602080830191825260016000908152600c80835293517fd421a5181c571bba3f01190c922c3b2a896fc1d84e86c9f17ac10e67ebef8b5c5591517fd421a5181c571bba3f01190c922c3b2a896fc1d84e86c9f17ac10e67ebef8b5d5583518085018552670214e8348c4f000081526a022bdd88fed9efc6a000008183018181526002855285845291517f5d6016397a73f5e079297ac5a36fef17b4d9c3831618e63ab105738020ddd7205590517f5d6016397a73f5e079297ac5a36fef17b4d9c3831618e63ab105738020ddd72155845180860186526702c68af0bb14000081528083018281526003855285845290517fc0da782485e77ae272268ae0a3ff44c1552ecb60b3743924de17a815e0a3cfd755517fc0da782485e77ae272268ae0a3ff44c1552ecb60b3743924de17a815e0a3cfd85584518086019095526703782dace9d90000855284820190815260049092529190915290517f5b84bb9e0f5aa9cc45a8bb66468db5d4816d1e75ff86b5e1f1dd8d144dab809755517f5b84bb9e0f5aa9cc45a8bb66468db5d4816d1e75ff86b5e1f1dd8d144dab809855565b6002546000908152600c6020526040902060010154610164565b600254610164565b61014f61042b366004610eaf565b610b35565b61014f610bae565b61014f610446366004610eaf565b610bc5565b61016460065481565b61045c610bf1565b600555565b610469610bf1565b600655565b610476610bf1565b60408051808201825292835260208084019283526000948552600c9052909220905181559051600190910155565b6104ac610bf1565b6001600160a01b03166000908152600a60205260409020805460ff19166001179055565b6104d8610bf1565b806001600160a01b031663a9059cbb6104f96001546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a082319060240160206040518083038186803b15801561053857600080fd5b505afa15801561054c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105709190610ef4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610f0d565b5050565b6105fa610c4b565b60045460ff16156106425760405162461bcd60e51b815260206004820152600d60248201526c56656e7461205061757361646160981b60448201526064015b60405180910390fd5b6001600160a01b0382166000908152600a602052604090205460ff1661069a5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2102a37b5b2b760991b6044820152606401610639565b6002546000908152600c602090815260408083208151808301909252805482526001015491810191909152906106cf83610ca5565b905060006106e1338460000151610d3d565b600454909150600160a81b900460ff1615610755573360009081526009602052604090205460ff166107555760405162461bcd60e51b815260206004820152601860248201527f596f7520617265206e6f7420696e2057686974654c69737400000000000000006044820152606401610639565b6040516370a0823160e01b815233600482015284906001600160a01b038716906370a082319060240160206040518083038186803b15801561079657600080fd5b505afa1580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce9190610ef4565b101561080d5760405162461bcd60e51b815260206004820152600e60248201526d42616c616e636520546f204c6f7760901b6044820152606401610639565b60006108198286610f45565b9050600081606461082a8683610f67565b6108349190610f45565b61083e9190610f86565b61085090670de0b6b3a7640000610f67565b905080600560008282546108649190610f86565b92505081905550856006600082825461087d9190610f86565b9091555050600554602086015114156108c3576001600260008282546108a39190610f86565b925050819055506000600560008282546108bd9190610f86565b90915550505b600480546040516323b872dd60e01b8152339281019290925261010090046001600160a01b039081166024830152604482018890528816906323b872dd90606401602060405180830381600087803b15801561091e57600080fd5b505af1158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190610f0d565b6109965760405162461bcd60e51b815260206004820152601160248201527022b93937b91034b7102a3930b739b332b960791b6044820152606401610639565b60075460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190610f0d565b610a5a5760405162461bcd60e51b815260206004820152601160248201527022b93937b91034b7102a3930b739b332b960791b6044820152606401610639565b60408051338152602081018490527f1ecc62d178ab4ffe6884f1463e2f3f563fa4090ef4f4a9c7c2682d9aa81abd20910160405180910390a150505050506105ee6001600055565b610aaa610bf1565b6004805460ff60a81b198116600160a81b9182900460ff1615909102179055565b610ad3610bf1565b610add6000610de9565b565b610ae7610bf1565b600480546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b610b17610bf1565b6004805460ff19169055565b610b2b610bf1565b6002556000600555565b610b3d610bf1565b6001600160a01b038116610ba25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610639565b610bab81610de9565b50565b610bb6610bf1565b6004805460ff19166001179055565b610bcd610bf1565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b6001546001600160a01b03163314610add5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610639565b60026000541415610c9e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610639565b6002600055565b6000610cb9670de0b6b3a764000083610f45565b9150600060328310158015610cce5750606483105b15610cd7575060195b60648310158015610ce957506101f483105b15610cf2575060325b6101f48310158015610d0557506103e883105b15610d0e575060645b6103e88310158015610d21575061138883105b15610d2a575060965b6113888310610d37575060c85b92915050565b6008546040516370a0823160e01b81526001600160a01b03848116600483015260009283929116906370a082319060240160206040518083038186803b158015610d8657600080fd5b505afa158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190610ef4565b9050826305f5e100821115610de157610dde8466b1a2bc2ec50000610e3b565b90505b949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610e478284610f9e565b9392505050565b600060208284031215610e6057600080fd5b5035919050565b600080600060608486031215610e7c57600080fd5b505081359360208301359350604090920135919050565b80356001600160a01b0381168114610eaa57600080fd5b919050565b600060208284031215610ec157600080fd5b610e4782610e93565b60008060408385031215610edd57600080fd5b610ee683610e93565b946020939093013593505050565b600060208284031215610f0657600080fd5b5051919050565b600060208284031215610f1f57600080fd5b81518015158114610e4757600080fd5b634e487b7160e01b600052601160045260246000fd5b600082610f6257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610f8157610f81610f2f565b500290565b60008219821115610f9957610f99610f2f565b500190565b600082821015610fb057610fb0610f2f565b50039056fea2646970667358221220e7e0da208e14fb0b696e450d1b82d928b4feb44214005b04bf36f4dc93e80a8964736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x939EDD0E GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE7CC0F79 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7CC0F79 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xECED0280 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xF83D08BA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xF8D5F409 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF9B49640 EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x939EDD0E EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xC362D20C EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xCF922B1E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xD3AFD6AC EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x478B0F87 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x478B0F87 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x5A53BF31 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x6F6A5D06 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C174BE EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x120005AE EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x1BFA3BF7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1C5F8024 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x2FEA6AC4 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0x14F PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x164 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x14F PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH11 0x4F7D1E992E034FDC00000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC DUP1 DUP4 MSTORE SWAP4 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5C SSTORE SWAP2 MLOAD PUSH32 0xD421A5181C571BBA3F01190C922C3B2A896FC1D84E86C9F17AC10E67EBEF8B5D SSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH8 0x214E8348C4F0000 DUP2 MSTORE PUSH11 0x22BDD88FED9EFC6A00000 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP2 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD720 SSTORE SWAP1 MLOAD PUSH32 0x5D6016397A73F5E079297AC5A36FEF17B4D9C3831618E63AB105738020DDD721 SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH8 0x2C68AF0BB140000 DUP2 MSTORE DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP1 MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD7 SSTORE MLOAD PUSH32 0xC0DA782485E77AE272268AE0A3FF44C1552ECB60B3743924DE17A815E0A3CFD8 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH8 0x3782DACE9D90000 DUP6 MSTORE DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE SWAP1 MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8097 SSTORE MLOAD PUSH32 0x5B84BB9E0F5AA9CC45A8BB66468DB5D4816D1E75FF86B5E1F1DD8D144DAB8098 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x164 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x164 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x14F PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x14F PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x164 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x45C PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x469 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0xC SWAP1 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x4AC PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x4F9 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5FA PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x56656E74612050617573616461 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B2102A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH2 0x6CF DUP4 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6E1 CALLER DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E2057686974654C6973740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST LT ISZERO PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x42616C616E636520546F204C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP3 DUP7 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x64 PUSH2 0x82A DUP7 DUP4 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x834 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0x850 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x864 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x20 DUP7 ADD MLOAD EQ ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x22B93937B91034B7102A3930B739B332B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1A SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x22B93937B91034B7102A3930B739B332B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1ECC62D178AB4FFE6884F1463E2F3F563FA4090EF4F4A9C7C2682D9AA81ABD20 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0x5EE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xAAA PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xA8 SHL SWAP2 DUP3 SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAD3 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0xADD PUSH1 0x0 PUSH2 0xDE9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xB3D PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x639 JUMP JUMPDEST PUSH2 0xBAB DUP2 PUSH2 0xDE9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB9 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH1 0x32 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI POP PUSH1 0x64 DUP4 LT JUMPDEST ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x19 JUMPDEST PUSH1 0x64 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xCE9 JUMPI POP PUSH2 0x1F4 DUP4 LT JUMPDEST ISZERO PUSH2 0xCF2 JUMPI POP PUSH1 0x32 JUMPDEST PUSH2 0x1F4 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI POP PUSH2 0x3E8 DUP4 LT JUMPDEST ISZERO PUSH2 0xD0E JUMPI POP PUSH1 0x64 JUMPDEST PUSH2 0x3E8 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI POP PUSH2 0x1388 DUP4 LT JUMPDEST ISZERO PUSH2 0xD2A JUMPI POP PUSH1 0x96 JUMPDEST PUSH2 0x1388 DUP4 LT PUSH2 0xD37 JUMPI POP PUSH1 0xC8 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0xEF4 JUMP JUMPDEST SWAP1 POP DUP3 PUSH4 0x5F5E100 DUP3 GT ISZERO PUSH2 0xDE1 JUMPI PUSH2 0xDDE DUP5 PUSH7 0xB1A2BC2EC50000 PUSH2 0xE3B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE47 DUP3 DUP5 PUSH2 0xF9E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP4 PUSH2 0xE93 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF62 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF81 JUMPI PUSH2 0xF81 PUSH2 0xF2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF99 JUMPI PUSH2 0xF99 PUSH2 0xF2F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0xFB0 PUSH2 0xF2F JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE0 0xDA KECCAK256 DUP15 EQ 0xFB SIGNEXTEND PUSH10 0x6E450D1B82D928B4FEB4 TIMESTAMP EQ STOP JUMPDEST DIV 0xBF CALLDATASIZE DELEGATECALL 0xDC SWAP4 0xE8 EXP DUP10 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"354:5671:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5924:98;;;;;;:::i;:::-;;:::i;:::-;;2594:104;2678:5;;2640:7;2667:17;;;:10;:17;;;;;:23;2594:104;;;345:25:7;;;333:2;318:18;2594:104:6;;;;;;;;5821:95;;;;;;:::i;:::-;;:::i;1967:181::-;;;;;;:::i;:::-;;:::i;2390:107::-;;;;;;:::i;:::-;;:::i;5628:185::-;;;;;;:::i;:::-;;:::i;2934:1212::-;;;;;;:::i;:::-;;:::i;1854:105::-;;;:::i;1831:101:0:-;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1476:51:7;;1464:2;1449:18;1201:85:0;1330:203:7;2818:108:6;;;;;;:::i;:::-;;:::i;1777:69::-;;;:::i;553:27::-;;;;;;2156:116;;;;;;:::i;:::-;;:::i;4154:308::-;;4209:41;;;;;;;;4216:18;4209:41;;4236:13;4209:41;;;;;;;4204:1;-1:-1:-1;4193:13:6;;;:10;:13;;;:57;;:13;:57;;;;;4277:41;;;;;;;4284:18;4277:41;;4304:13;4277:41;;;;;;4272:1;4261:13;;;;;:57;;:13;:57;;;;;4345:41;;;;;;;4352:18;4345:41;;;;;;;;4340:1;4329:13;;;;;:57;;:13;:57;;;;4413:41;;;;;;;;4420:18;4413:41;;;;;;;;4408:1;4397:13;;;;;;;:57;;:13;:57;;;;4154:308;2706:104;2789:5;;2751:7;2778:17;;;:10;:17;;;;;:24;;;2706:104;;2505:81;2573:5;;2505:81;;2081:198:0;;;;;;:::i;:::-;;:::i;1639:66:6:-;;;:::i;2280:102::-;;;;;;:::i;:::-;;:::i;587:27::-;;;;;;5924:98;1094:13:0;:11;:13::i;:::-;5994:12:6::1;:20:::0;5924:98::o;5821:95::-;1094:13:0;:11;:13::i;:::-;5888:12:6::1;:20:::0;5821:95::o;1967:181::-;1094:13:0;:11;:13::i;:::-;2117:23:6::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;2096:18:6;;;:10:::1;:18:::0;;;;;:44;;;;;;::::1;::::0;;::::1;::::0;1967:181::o;2390:107::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2460:22:6::1;;::::0;;;:12:::1;:22;::::0;;;;:29;;-1:-1:-1;;2460:29:6::1;2485:4;2460:29;::::0;;2390:107::o;5628:185::-;1094:13:0;:11;:13::i;:::-;5702:6:6::1;-1:-1:-1::0;;;;;5695:23:6::1;;5733:7;1273:6:0::0;;-1:-1:-1;;;;;1273:6:0;;1201:85;5733:7:6::1;5755:39;::::0;-1:-1:-1;;;5755:39:6;;5788:4:::1;5755:39;::::0;::::1;1476:51:7::0;-1:-1:-1;;;;;5755:24:6;::::1;::::0;::::1;::::0;1449:18:7;;5755:39:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5695:110;::::0;-1:-1:-1;;;;;;5695:110:6::1;::::0;;;;;;-1:-1:-1;;;;;1919:32:7;;;5695:110:6::1;::::0;::::1;1901:51:7::0;1968:18;;;1961:34;1874:18;;5695:110:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5628:185:::0;:::o;2934:1212::-;2261:21:2;:19;:21::i;:::-;1520:5:6::1;::::0;::::1;;1519:6;1511:32;;;::::0;-1:-1:-1;;;1511:32:6;;2490:2:7;1511:32:6::1;::::0;::::1;2472:21:7::0;2529:2;2509:18;;;2502:30;-1:-1:-1;;;2548:18:7;;;2541:43;2601:18;;1511:32:6::1;;;;;;;;;-1:-1:-1::0;;;;;3062:20:6;::::2;;::::0;;;:12:::2;:20;::::0;;;;;::::2;;3054:46;;;::::0;-1:-1:-1;;;3054:46:6;;2832:2:7;3054:46:6::2;::::0;::::2;2814:21:7::0;2871:2;2851:18;;;2844:30;-1:-1:-1;;;2890:18:7;;;2883:43;2943:18;;3054:46:6::2;2630:337:7::0;3054:46:6::2;3150:5;::::0;3113:23:::2;3139:17:::0;;;:10:::2;:17;::::0;;;;;;;3113:43;;;;::::2;::::0;;;;;;;::::2;;::::0;;;::::2;::::0;;;;;3188:19:::2;3199:7:::0;3188:10:::2;:19::i;:::-;3169:38;;3218:14;3235:48;3255:10;3267:9;:15;;;3235:19;:48::i;:::-;3300:15;::::0;3218:65;;-1:-1:-1;;;;3300:15:6;::::2;;;3296:92;;;3348:10;3338:21;::::0;;;:9:::2;:21;::::0;;;;;::::2;;3330:58;;;::::0;-1:-1:-1;;;3330:58:6;;3174:2:7;3330:58:6::2;::::0;::::2;3156:21:7::0;3213:2;3193:18;;;3186:30;3252:26;3232:18;;;3225:54;3296:18;;3330:58:6::2;2972:348:7::0;3330:58:6::2;3423:36;::::0;-1:-1:-1;;;3423:36:6;;3448:10:::2;3423:36;::::0;::::2;1476:51:7::0;3463:7:6;;-1:-1:-1;;;;;3423:24:6;::::2;::::0;::::2;::::0;1449:18:7;;3423:36:6::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;3401:111;;;::::0;-1:-1:-1;;;3401:111:6;;3527:2:7;3401:111:6::2;::::0;::::2;3509:21:7::0;3566:2;3546:18;;;3539:30;-1:-1:-1;;;3585:18:7;;;3578:44;3639:18;;3401:111:6::2;3325:338:7::0;3401:111:6::2;3525:19;3547:16;3557:6:::0;3547:7;:16:::2;:::i;:::-;3525:38:::0;-1:-1:-1;3574:21:6::2;3525:38:::0;3627:3:::2;3601:22;3615:8:::0;3525:38;3601:22:::2;:::i;:::-;3600:30;;;;:::i;:::-;3599:46;;;;:::i;:::-;3598:59;::::0;3649:8:::2;3598:59;:::i;:::-;3574:83;;3693:13;3677:12;;:29;;;;;;;:::i;:::-;;;;;;;;3735:7;3719:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3779:12:6::2;::::0;3759:16:::2;::::0;::::2;::::0;:32:::2;3755:107;;;3817:1;3808:5;;:10;;;;;;;:::i;:::-;;;;;;;;3849:1;3833:12;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3755:107:6::2;3936:12;::::0;;3896:62:::2;::::0;-1:-1:-1;;;3896:62:6;;3924:10:::2;3896:62:::0;;::::2;4568:34:7::0;;;;3936:12:6::2;::::0;::::2;-1:-1:-1::0;;;;;3936:12:6;;::::2;4618:18:7::0;;;4611:43;4670:18;;;4663:34;;;3896:27:6;::::2;::::0;::::2;::::0;4503:18:7;;3896:62:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3874:129;;;::::0;-1:-1:-1;;;3874:129:6;;4910:2:7;3874:129:6::2;::::0;::::2;4892:21:7::0;4949:2;4929:18;;;4922:30;-1:-1:-1;;;4968:18:7;;;4961:47;5025:18;;3874:129:6::2;4708:341:7::0;3874:129:6::2;4022:5;::::0;:41:::2;::::0;-1:-1:-1;;;4022:41:6;;4037:10:::2;4022:41;::::0;::::2;1901:51:7::0;1968:18;;;1961:34;;;-1:-1:-1;;;;;4022:5:6;;::::2;::::0;:14:::2;::::0;1874:18:7;;4022:41:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4014:71;;;::::0;-1:-1:-1;;;4014:71:6;;4910:2:7;4014:71:6::2;::::0;::::2;4892:21:7::0;4949:2;4929:18;;;4922:30;-1:-1:-1;;;4968:18:7;;;4961:47;5025:18;;4014:71:6::2;4708:341:7::0;4014:71:6::2;4103:35;::::0;;4114:10:::2;1901:51:7::0;;1983:2;1968:18;;1961:34;;;4103:35:6::2;::::0;1874:18:7;4103:35:6::2;;;;;;;3043:1103;;;;;2303:20:2::0;1716:1;2809:7;:22;2629:209;1854:105:6;1094:13:0;:11;:13::i;:::-;1936:15:6::1;::::0;;-1:-1:-1;;;;1917:34:6;::::1;-1:-1:-1::0;;;1936:15:6;;;::::1;;;1935:16;1917:34:::0;;::::1;;::::0;;1854:105::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2818:108:6:-;1094:13:0;:11;:13::i;:::-;2895:12:6::1;:23:::0;;-1:-1:-1;;;;;2895:23:6;;::::1;;;-1:-1:-1::0;;;;;;2895:23:6;;::::1;::::0;;;::::1;::::0;;2818:108::o;1777:69::-;1094:13:0;:11;:13::i;:::-;1825:5:6::1;:13:::0;;-1:-1:-1;;1825:13:6::1;::::0;;1777:69::o;2156:116::-;1094:13:0;:11;:13::i;:::-;2222:5:6::1;:15:::0;2263:1:::1;2248:12;:16:::0;2156:116::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5256:2:7;2161:73:0::1;::::0;::::1;5238:21:7::0;5295:2;5275:18;;;5268:30;5334:34;5314:18;;;5307:62;-1:-1:-1;;;5385:18:7;;;5378:36;5431:19;;2161:73:0::1;5054:402:7::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1639:66:6:-;1094:13:0;:11;:13::i;:::-;1685:5:6::1;:12:::0;;-1:-1:-1;;1685:12:6::1;1693:4;1685:12;::::0;;1639:66::o;2280:102::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2348:19:6::1;;::::0;;;:9:::1;:19;::::0;;;;:26;;-1:-1:-1;;2348:26:6::1;2370:4;2348:26;::::0;;2280:102::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5663:2:7;1414:68:0;;;5645:21:7;;;5682:18;;;5675:30;5741:34;5721:18;;;5714:62;5793:18;;1414:68:0;5461:356:7;2336:287:2;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:2;;6024:2:7;2460:63:2;;;6006:21:7;6063:2;6043:18;;;6036:30;6102:33;6082:18;;;6075:61;6153:18;;2460:63:2;5822:355:7;2460:63:2;1759:1;2598:7;:18;2336:287::o;4470:797:6:-;4546:15;4584:18;4594:8;4584:7;:18;:::i;:::-;4574:28;;4613:16;4822:2;4811:7;:13;;:29;;;;;4837:3;4828:7;:12;4811:29;4807:75;;;-1:-1:-1;4868:2:6;4807:75;4909:3;4898:7;:14;;:30;;;;;4925:3;4916:7;:12;4898:30;4894:76;;;-1:-1:-1;4956:2:6;4894:76;4997:3;4986:7;:14;;:31;;;;;5013:4;5004:7;:13;4986:31;4982:78;;;-1:-1:-1;5045:3:6;4982:78;5087:4;5076:7;:15;;:33;;;;;5105:4;5095:7;:14;5076:33;5072:80;;;-1:-1:-1;5137:3:6;5072:80;5177:4;5166:7;:15;5162:62;;-1:-1:-1;5209:3:6;5162:62;5251:8;4470:797;-1:-1:-1;;4470:797:6:o;5275:345::-;5426:5;;:22;;-1:-1:-1;;;5426:22:6;;-1:-1:-1;;;;;1494:32:7;;;5426:22:6;;;1476:51:7;5383:7:6;;;;5426:5;;;:15;;1449:18:7;;5426:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5403:45;-1:-1:-1;5478:6:6;5514:11;5499:26;;5495:92;;;5553:22;:6;5564:10;5553;:22::i;:::-;5542:33;;5495:92;5604:8;5275:345;-1:-1:-1;;;;5275:345:6:o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;3122:96:5:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:5:o;14:180:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:7;;14:180;-1:-1:-1;14:180:7:o;381:316::-;458:6;466;474;527:2;515:9;506:7;502:23;498:32;495:52;;;543:1;540;533:12;495:52;-1:-1:-1;;566:23:7;;;636:2;621:18;;608:32;;-1:-1:-1;687:2:7;672:18;;;659:32;;381:316;-1:-1:-1;381:316:7:o;702:173::-;770:20;;-1:-1:-1;;;;;819:31:7;;809:42;;799:70;;865:1;862;855:12;799:70;702:173;;;:::o;880:186::-;939:6;992:2;980:9;971:7;967:23;963:32;960:52;;;1008:1;1005;998:12;960:52;1031:29;1050:9;1031:29;:::i;1071:254::-;1139:6;1147;1200:2;1188:9;1179:7;1175:23;1171:32;1168:52;;;1216:1;1213;1206:12;1168:52;1239:29;1258:9;1239:29;:::i;:::-;1229:39;1315:2;1300:18;;;;1287:32;;-1:-1:-1;;;1071:254:7:o;1538:184::-;1608:6;1661:2;1649:9;1640:7;1636:23;1632:32;1629:52;;;1677:1;1674;1667:12;1629:52;-1:-1:-1;1700:16:7;;1538:184;-1:-1:-1;1538:184:7:o;2006:277::-;2073:6;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2174:9;2168:16;2227:5;2220:13;2213:21;2206:5;2203:32;2193:60;;2249:1;2246;2239:12;3668:127;3729:10;3724:3;3720:20;3717:1;3710:31;3760:4;3757:1;3750:15;3784:4;3781:1;3774:15;3800:217;3840:1;3866;3856:132;;3910:10;3905:3;3901:20;3898:1;3891:31;3945:4;3942:1;3935:15;3973:4;3970:1;3963:15;3856:132;-1:-1:-1;4002:9:7;;3800:217::o;4022:168::-;4062:7;4128:1;4124;4120:6;4116:14;4113:1;4110:21;4105:1;4098:9;4091:17;4087:45;4084:71;;;4135:18;;:::i;:::-;-1:-1:-1;4175:9:7;;4022:168::o;4195:128::-;4235:3;4266:1;4262:6;4259:1;4256:13;4253:39;;;4272:18;;:::i;:::-;-1:-1:-1;4308:9:7;;4195:128::o;6182:125::-;6222:4;6250:1;6247;6244:8;6241:34;;;6255:18;;:::i;:::-;-1:-1:-1;6292:9:7;;6182:125::o"},"methodIdentifiers":{"AddPhase(uint256,uint256,uint256)":"1c5f8024","AddTokenAccept(address)":"2fea6ac4","AddWhiteList(address)":"f8d5f409","BuyReffi(address,uint256)":"5a53bf31","ChangeActivateWhiteList()":"6f6a5d06","ChangePhase(uint256)":"cf922b1e","ChangeWalletLiquidity(address)":"939edd0e","PhaseSelling()":"c362d20c","PhaseSellingAdd(uint256)":"08c174be","RecoverTokens(address)":"478b0f87","TokensSellAdd(uint256)":"1bfa3bf7","TotalSelling()":"f9b49640","addPhases()":"d3afd6ac","getPhase()":"eced0280","getPhaseCost()":"e7cc0f79","getPhasePrice()":"120005ae","lock()":"f83d08ba","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlock()":"a69df4b5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_criptovision\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_refi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_walletDindon\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AirdopReferal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ReffiBuyed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AddPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AddTokenAccept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AddWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyReffi\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChangeActivateWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"}],\"name\":\"ChangePhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ChangeWalletLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PhaseSelling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PhaseSellingAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"RecoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensSellAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalSelling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addPhases\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhaseCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhasePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/refisell.sol\":\"REFFISELL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/refisell.sol\":{\"keccak256\":\"0xc2be4535521f2401fe77a991ac97fe57454b3ab07f8fa5e8204cfc9c1ced5f2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6329efb2226902a1421ed6311258afa7a5b0bdc87e02a2f25adbe5314df58df7\",\"dweb:/ipfs/QmfUgdhNgEpcPdAzaBzPNKhSCbQ42cgzBKJ5GoT13zzMRQ\"]}},\"version\":1}"}}}}}